{
	"id": "cc0a85b970ac263d67b4dd6cef50297d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/testtoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\r\n\r\n// openZepplin의 ERC20컨트랙트 상속\r\ncontract MyToken is ERC20 {\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\r\n        // Mint 100 tokens to msg.sender\r\n        // Similar to how\r\n        // 1 dollar = 100 cents\r\n        // 1 token = 1 * (10 ** decimals)\r\n        _mint(msg.sender, 20000 * 10**uint(decimals()));\r\n    }\r\n}\r\n\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error ERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `requestedDecrease`.\n     *\n     * NOTE: Although this function is designed to avoid double spending with {approval},\n     * it can still be frontrunned, preventing any attempt of allowance reduction.\n     */\n    function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < requestedDecrease) {\n            revert ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n        }\n        unchecked {\n            _approve(owner, spender, currentAllowance - requestedDecrease);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n     * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, by transferring it to address(0).\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal virtual {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Alternative version of {_approve} with an optional flag that can enable or disable the Approval event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to true\n     * using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/testtoken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/testtoken.sol\":217:538  contract MyToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/testtoken.sol\":250:535  constructor(string memory name, string memory symbol) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/testtoken.sol\":310:314  name */\n  dup2\n    /* \"contracts/testtoken.sol\":316:322  symbol */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2348:2353  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2340:2345  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2340:2353  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2373:2380  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2363:2370  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2363:2380  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2274:2387  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/testtoken.sol\":480:527  _mint(msg.sender, 20000 * 10**uint(decimals())) */\n  tag_11\n    /* \"contracts/testtoken.sol\":486:496  msg.sender */\n  caller\n    /* \"contracts/testtoken.sol\":515:525  decimals() */\n  tag_12\n    /* \"contracts/testtoken.sol\":515:523  decimals */\n  shl(0x20, tag_13)\n    /* \"contracts/testtoken.sol\":515:525  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/testtoken.sol\":510:526  uint(decimals()) */\n  0xff\n  and\n    /* \"contracts/testtoken.sol\":506:508  10 */\n  0x0a\n    /* \"contracts/testtoken.sol\":506:526  10**uint(decimals()) */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/testtoken.sol\":498:503  20000 */\n  0x4e20\n    /* \"contracts/testtoken.sol\":498:526  20000 * 10**uint(decimals()) */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/testtoken.sol\":480:485  _mint */\n  shl(0x20, tag_18)\n    /* \"contracts/testtoken.sol\":480:527  _mint(msg.sender, 20000 * 10**uint(decimals())) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/testtoken.sol\":250:535  constructor(string memory name, string memory symbol) ERC20(name, symbol) {... */\n  pop\n  pop\n    /* \"contracts/testtoken.sol\":217:538  contract MyToken is ERC20 {... */\n  jump(tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3429:3434  uint8 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3453:3455  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3446:3455  return 18 */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9883:10091  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9972:9973  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9953:9974  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9953:9960  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9953:9974  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9949:10040  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10026:10027  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9997:10029  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9949:10040  if (account == address(0)) {... */\ntag_22:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10049:10084  _update(address(0), account, value) */\n  tag_25\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10065:10066  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10069:10076  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10078:10083  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10049:10056  _update */\n  shl(0x20, tag_26)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10049:10084  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9883:10091  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8538:8539  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8526  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8674:8679  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8670  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8679  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8729  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8741  _balances */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8742:8746  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8747  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8779:8784  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8776  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8784  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8836:8840  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8853  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8855:8860  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8811:8861  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\ntag_32:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9028:9033  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9025  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9033  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9005  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9006:9010  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9033  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8696:9058  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\ntag_31:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9086:9087  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9074  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9251:9256  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9247  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9256  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9463:9468  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9455  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9456:9458  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9468  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\ntag_36:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9523:9525  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9517:9521  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9527:9532  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_39:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_41:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_42:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_43:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_44:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_45:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_46:\n    /* \"#utility.yul\":957:984   */\n  tag_88\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_90\n  tag_45\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1030:1118   */\ntag_89:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_47:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_92\n  tag_39\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_93\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_46\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_48:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_96\n  tag_45\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1434:1490   */\ntag_95:\n    /* \"#utility.yul\":1508:1537   */\n  tag_97\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_44\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_49:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_99:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_50:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_103\n    /* \"#utility.yul\":1992:2041   */\n  tag_104\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_48\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1976:2042   */\n  tag_47\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_106\n  tag_43\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2117:2229   */\ntag_105:\n    /* \"#utility.yul\":2238:2290   */\n  tag_107\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_49\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_51:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_110\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2399:2521   */\ntag_109:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_111\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_50\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_114\n  tag_40\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2801:2920   */\ntag_113:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_116\n  tag_41\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2996:3113   */\ntag_115:\n    /* \"#utility.yul\":3137:3211   */\n  tag_117\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_51\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_119\n  tag_41\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3298:3415   */\ntag_118:\n    /* \"#utility.yul\":3439:3513   */\n  tag_120\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_51\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_52:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_53:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_54:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_124:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_126\n  tag_53\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4057:4141   */\ntag_125:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_55:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_56:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_57:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_58:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_131\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_57\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4772:4811   */\n  tag_132\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_57\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_59:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_60:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_61:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_136\n    /* \"#utility.yul\":5161:5195   */\n  tag_137\n    /* \"#utility.yul\":5170:5194   */\n  tag_138\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_59\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5161:5195   */\n  tag_60\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5143:5196   */\n  tag_59\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_62:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_63:\n    /* \"#utility.yul\":5399:5438   */\n  tag_141\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_61\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5460:5551   */\n  tag_142\n    /* \"#utility.yul\":5509:5550   */\n  tag_143\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_62\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_58\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_64:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_65:\n    /* \"#utility.yul\":5720:5752   */\n  tag_146\n  tag_64\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5761:5826   */\n  tag_147\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_63\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_66:\n    /* \"#utility.yul\":5898:6018   */\ntag_149:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_152\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_65\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_149)\ntag_151:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_67:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_155\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_55\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6249:6278   */\n  tag_156\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_56\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_157:\n    /* \"#utility.yul\":6476:6556   */\n  tag_158\n    /* \"#utility.yul\":6532:6554   */\n  tag_159\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_56\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_66\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_154:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_68:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_69:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_162\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_68\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_70:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_164\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_69\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_166\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_52\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_168\n  tag_45\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7381:7437   */\ntag_167:\n    /* \"#utility.yul\":7461:7499   */\n  tag_169\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_54\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7546:7613   */\n  tag_170\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_67\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_173:\n    /* \"#utility.yul\":8487:8554   */\n  tag_174\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_70\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_171)\n    /* \"#utility.yul\":7708:8326   */\ntag_172:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_175\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_55\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_176:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_176)\ntag_178:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_180\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_69\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_179:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_171:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8577:8757   */\ntag_71:\n    /* \"#utility.yul\":8625:8702   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8622:8623   */\n  0x00\n    /* \"#utility.yul\":8615:8703   */\n  mstore\n    /* \"#utility.yul\":8722:8726   */\n  0x11\n    /* \"#utility.yul\":8719:8720   */\n  0x04\n    /* \"#utility.yul\":8712:8727   */\n  mstore\n    /* \"#utility.yul\":8746:8750   */\n  0x24\n    /* \"#utility.yul\":8743:8744   */\n  0x00\n    /* \"#utility.yul\":8736:8751   */\n  revert\n    /* \"#utility.yul\":8763:8865   */\ntag_72:\n    /* \"#utility.yul\":8805:8813   */\n  0x00\n    /* \"#utility.yul\":8852:8857   */\n  dup2\n    /* \"#utility.yul\":8849:8850   */\n  0x01\n    /* \"#utility.yul\":8845:8858   */\n  shr\n    /* \"#utility.yul\":8824:8858   */\n  swap1\n  pop\n    /* \"#utility.yul\":8763:8865   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8871:9719   */\ntag_73:\n    /* \"#utility.yul\":8932:8937   */\n  0x00\n    /* \"#utility.yul\":8939:8943   */\n  dup1\n    /* \"#utility.yul\":8963:8969   */\n  dup3\n    /* \"#utility.yul\":8954:8969   */\n  swap2\n  pop\n    /* \"#utility.yul\":8987:8992   */\n  dup4\n    /* \"#utility.yul\":8978:8992   */\n  swap1\n  pop\n    /* \"#utility.yul\":9001:9713   */\ntag_184:\n    /* \"#utility.yul\":9022:9023   */\n  0x01\n    /* \"#utility.yul\":9012:9020   */\n  dup6\n    /* \"#utility.yul\":9009:9024   */\n  gt\n    /* \"#utility.yul\":9001:9713   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":9117:9121   */\n  dup1\n    /* \"#utility.yul\":9112:9115   */\n  dup7\n    /* \"#utility.yul\":9108:9122   */\n  div\n    /* \"#utility.yul\":9102:9106   */\n  dup2\n    /* \"#utility.yul\":9099:9123   */\n  gt\n    /* \"#utility.yul\":9096:9146   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9126:9144   */\n  tag_188\n  tag_71\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9096:9146   */\ntag_187:\n    /* \"#utility.yul\":9176:9177   */\n  0x01\n    /* \"#utility.yul\":9166:9174   */\n  dup6\n    /* \"#utility.yul\":9162:9178   */\n  and\n    /* \"#utility.yul\":9159:9610   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":9591:9595   */\n  dup1\n    /* \"#utility.yul\":9584:9589   */\n  dup3\n    /* \"#utility.yul\":9580:9596   */\n  mul\n    /* \"#utility.yul\":9571:9596   */\n  swap2\n  pop\n    /* \"#utility.yul\":9159:9610   */\ntag_189:\n    /* \"#utility.yul\":9641:9645   */\n  dup1\n    /* \"#utility.yul\":9635:9639   */\n  dup2\n    /* \"#utility.yul\":9631:9646   */\n  mul\n    /* \"#utility.yul\":9623:9646   */\n  swap1\n  pop\n    /* \"#utility.yul\":9671:9703   */\n  tag_190\n    /* \"#utility.yul\":9694:9702   */\n  dup6\n    /* \"#utility.yul\":9671:9703   */\n  tag_72\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9659:9703   */\n  swap5\n  pop\n    /* \"#utility.yul\":9001:9713   */\n  jump(tag_184)\ntag_186:\n    /* \"#utility.yul\":8871:9719   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9725:10798   */\ntag_74:\n    /* \"#utility.yul\":9779:9784   */\n  0x00\n    /* \"#utility.yul\":9970:9978   */\n  dup3\n    /* \"#utility.yul\":9960:10000   */\n  tag_192\n  jumpi\n    /* \"#utility.yul\":9991:9992   */\n  0x01\n    /* \"#utility.yul\":9982:9992   */\n  swap1\n  pop\n    /* \"#utility.yul\":9993:9998   */\n  jump(tag_191)\n    /* \"#utility.yul\":9960:10000   */\ntag_192:\n    /* \"#utility.yul\":10019:10023   */\n  dup2\n    /* \"#utility.yul\":10009:10045   */\n  tag_193\n  jumpi\n    /* \"#utility.yul\":10036:10037   */\n  0x00\n    /* \"#utility.yul\":10027:10037   */\n  swap1\n  pop\n    /* \"#utility.yul\":10038:10043   */\n  jump(tag_191)\n    /* \"#utility.yul\":10009:10045   */\ntag_193:\n    /* \"#utility.yul\":10105:10109   */\n  dup2\n    /* \"#utility.yul\":10153:10154   */\n  0x01\n    /* \"#utility.yul\":10148:10175   */\n  dup2\n  eq\n  tag_195\n  jumpi\n    /* \"#utility.yul\":10189:10190   */\n  0x02\n    /* \"#utility.yul\":10184:10375   */\n  dup2\n  eq\n  tag_196\n  jumpi\n    /* \"#utility.yul\":10098:10375   */\n  jump(tag_194)\n    /* \"#utility.yul\":10148:10175   */\ntag_195:\n    /* \"#utility.yul\":10166:10167   */\n  0x01\n    /* \"#utility.yul\":10157:10167   */\n  swap2\n  pop\n    /* \"#utility.yul\":10168:10173   */\n  pop\n  jump(tag_191)\n    /* \"#utility.yul\":10184:10375   */\ntag_196:\n    /* \"#utility.yul\":10229:10232   */\n  0xff\n    /* \"#utility.yul\":10219:10227   */\n  dup5\n    /* \"#utility.yul\":10216:10233   */\n  gt\n    /* \"#utility.yul\":10213:10256   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":10236:10254   */\n  tag_198\n  tag_71\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10213:10256   */\ntag_197:\n    /* \"#utility.yul\":10285:10293   */\n  dup4\n    /* \"#utility.yul\":10282:10283   */\n  0x02\n    /* \"#utility.yul\":10278:10294   */\n  exp\n    /* \"#utility.yul\":10269:10294   */\n  swap2\n  pop\n    /* \"#utility.yul\":10320:10323   */\n  dup5\n    /* \"#utility.yul\":10313:10318   */\n  dup3\n    /* \"#utility.yul\":10310:10324   */\n  gt\n    /* \"#utility.yul\":10307:10347   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":10327:10345   */\n  tag_200\n  tag_71\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10307:10347   */\ntag_199:\n    /* \"#utility.yul\":10360:10365   */\n  pop\n  jump(tag_191)\n    /* \"#utility.yul\":10098:10375   */\ntag_194:\n  pop\n    /* \"#utility.yul\":10484:10486   */\n  0x20\n    /* \"#utility.yul\":10474:10482   */\n  dup4\n    /* \"#utility.yul\":10471:10487   */\n  lt\n    /* \"#utility.yul\":10465:10468   */\n  0x0133\n    /* \"#utility.yul\":10459:10463   */\n  dup4\n    /* \"#utility.yul\":10456:10469   */\n  lt\n    /* \"#utility.yul\":10452:10488   */\n  and\n    /* \"#utility.yul\":10434:10436   */\n  0x4e\n    /* \"#utility.yul\":10424:10432   */\n  dup5\n    /* \"#utility.yul\":10421:10437   */\n  lt\n    /* \"#utility.yul\":10416:10418   */\n  0x0b\n    /* \"#utility.yul\":10410:10414   */\n  dup5\n    /* \"#utility.yul\":10407:10419   */\n  lt\n    /* \"#utility.yul\":10403:10438   */\n  and\n    /* \"#utility.yul\":10387:10498   */\n  or\n    /* \"#utility.yul\":10384:10630   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":10540:10548   */\n  dup3\n    /* \"#utility.yul\":10534:10538   */\n  dup3\n    /* \"#utility.yul\":10530:10549   */\n  exp\n    /* \"#utility.yul\":10521:10549   */\n  swap1\n  pop\n    /* \"#utility.yul\":10575:10578   */\n  dup4\n    /* \"#utility.yul\":10568:10573   */\n  dup2\n    /* \"#utility.yul\":10565:10579   */\n  gt\n    /* \"#utility.yul\":10562:10602   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":10582:10600   */\n  tag_203\n  tag_71\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10562:10602   */\ntag_202:\n    /* \"#utility.yul\":10615:10620   */\n  jump(tag_191)\n    /* \"#utility.yul\":10384:10630   */\ntag_201:\n    /* \"#utility.yul\":10655:10697   */\n  tag_204\n    /* \"#utility.yul\":10693:10696   */\n  dup5\n    /* \"#utility.yul\":10683:10691   */\n  dup5\n    /* \"#utility.yul\":10677:10681   */\n  dup5\n    /* \"#utility.yul\":10674:10675   */\n  0x01\n    /* \"#utility.yul\":10655:10697   */\n  tag_73\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10640:10697   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":10729:10733   */\n  dup2\n    /* \"#utility.yul\":10724:10727   */\n  dup5\n    /* \"#utility.yul\":10720:10734   */\n  div\n    /* \"#utility.yul\":10713:10718   */\n  dup2\n    /* \"#utility.yul\":10710:10735   */\n  gt\n    /* \"#utility.yul\":10707:10758   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10738:10756   */\n  tag_206\n  tag_71\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10707:10758   */\ntag_205:\n    /* \"#utility.yul\":10787:10791   */\n  dup2\n    /* \"#utility.yul\":10780:10785   */\n  dup2\n    /* \"#utility.yul\":10776:10792   */\n  mul\n    /* \"#utility.yul\":10767:10792   */\n  swap1\n  pop\n    /* \"#utility.yul\":9725:10798   */\ntag_191:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10804:11089   */\ntag_15:\n    /* \"#utility.yul\":10864:10869   */\n  0x00\n    /* \"#utility.yul\":10888:10911   */\n  tag_208\n    /* \"#utility.yul\":10906:10910   */\n  dup3\n    /* \"#utility.yul\":10888:10911   */\n  tag_59\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10880:10911   */\n  swap2\n  pop\n    /* \"#utility.yul\":10932:10959   */\n  tag_209\n    /* \"#utility.yul\":10950:10958   */\n  dup4\n    /* \"#utility.yul\":10932:10959   */\n  tag_59\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10920:10959   */\n  swap3\n  pop\n    /* \"#utility.yul\":10978:11082   */\n  tag_210\n    /* \"#utility.yul\":11015:11081   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11005:11013   */\n  dup5\n    /* \"#utility.yul\":10999:11003   */\n  dup5\n    /* \"#utility.yul\":10978:11082   */\n  tag_74\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10969:11082   */\n  swap1\n  pop\n    /* \"#utility.yul\":10804:11089   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11095:11505   */\ntag_17:\n    /* \"#utility.yul\":11135:11142   */\n  0x00\n    /* \"#utility.yul\":11158:11178   */\n  tag_212\n    /* \"#utility.yul\":11176:11177   */\n  dup3\n    /* \"#utility.yul\":11158:11178   */\n  tag_59\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":11153:11178   */\n  swap2\n  pop\n    /* \"#utility.yul\":11192:11212   */\n  tag_213\n    /* \"#utility.yul\":11210:11211   */\n  dup4\n    /* \"#utility.yul\":11192:11212   */\n  tag_59\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":11187:11212   */\n  swap3\n  pop\n    /* \"#utility.yul\":11247:11248   */\n  dup3\n    /* \"#utility.yul\":11244:11245   */\n  dup3\n    /* \"#utility.yul\":11240:11249   */\n  mul\n    /* \"#utility.yul\":11269:11299   */\n  tag_214\n    /* \"#utility.yul\":11287:11298   */\n  dup2\n    /* \"#utility.yul\":11269:11299   */\n  tag_59\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":11258:11299   */\n  swap2\n  pop\n    /* \"#utility.yul\":11448:11449   */\n  dup3\n    /* \"#utility.yul\":11439:11446   */\n  dup3\n    /* \"#utility.yul\":11435:11450   */\n  div\n    /* \"#utility.yul\":11432:11433   */\n  dup5\n    /* \"#utility.yul\":11429:11451   */\n  eq\n    /* \"#utility.yul\":11409:11410   */\n  dup4\n    /* \"#utility.yul\":11402:11411   */\n  iszero\n    /* \"#utility.yul\":11382:11465   */\n  or\n    /* \"#utility.yul\":11359:11498   */\n  tag_215\n  jumpi\n    /* \"#utility.yul\":11478:11496   */\n  tag_216\n  tag_71\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11359:11498   */\ntag_215:\n    /* \"#utility.yul\":11143:11505   */\n  pop\n    /* \"#utility.yul\":11095:11505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11511:11637   */\ntag_75:\n    /* \"#utility.yul\":11548:11555   */\n  0x00\n    /* \"#utility.yul\":11588:11630   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11581:11586   */\n  dup3\n    /* \"#utility.yul\":11577:11631   */\n  and\n    /* \"#utility.yul\":11566:11631   */\n  swap1\n  pop\n    /* \"#utility.yul\":11511:11637   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11643:11739   */\ntag_76:\n    /* \"#utility.yul\":11680:11687   */\n  0x00\n    /* \"#utility.yul\":11709:11733   */\n  tag_219\n    /* \"#utility.yul\":11727:11732   */\n  dup3\n    /* \"#utility.yul\":11709:11733   */\n  tag_75\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11698:11733   */\n  swap1\n  pop\n    /* \"#utility.yul\":11643:11739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11745:11863   */\ntag_77:\n    /* \"#utility.yul\":11832:11856   */\n  tag_221\n    /* \"#utility.yul\":11850:11855   */\n  dup2\n    /* \"#utility.yul\":11832:11856   */\n  tag_76\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11827:11830   */\n  dup3\n    /* \"#utility.yul\":11820:11857   */\n  mstore\n    /* \"#utility.yul\":11745:11863   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11869:12091   */\ntag_24:\n    /* \"#utility.yul\":11962:11966   */\n  0x00\n    /* \"#utility.yul\":12000:12002   */\n  0x20\n    /* \"#utility.yul\":11989:11998   */\n  dup3\n    /* \"#utility.yul\":11985:12003   */\n  add\n    /* \"#utility.yul\":11977:12003   */\n  swap1\n  pop\n    /* \"#utility.yul\":12013:12084   */\n  tag_223\n    /* \"#utility.yul\":12081:12082   */\n  0x00\n    /* \"#utility.yul\":12070:12079   */\n  dup4\n    /* \"#utility.yul\":12066:12083   */\n  add\n    /* \"#utility.yul\":12057:12063   */\n  dup5\n    /* \"#utility.yul\":12013:12084   */\n  tag_77\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11869:12091   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12097:12288   */\ntag_30:\n    /* \"#utility.yul\":12137:12140   */\n  0x00\n    /* \"#utility.yul\":12156:12176   */\n  tag_225\n    /* \"#utility.yul\":12174:12175   */\n  dup3\n    /* \"#utility.yul\":12156:12176   */\n  tag_59\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":12151:12176   */\n  swap2\n  pop\n    /* \"#utility.yul\":12190:12210   */\n  tag_226\n    /* \"#utility.yul\":12208:12209   */\n  dup4\n    /* \"#utility.yul\":12190:12210   */\n  tag_59\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":12185:12210   */\n  swap3\n  pop\n    /* \"#utility.yul\":12233:12234   */\n  dup3\n    /* \"#utility.yul\":12230:12231   */\n  dup3\n    /* \"#utility.yul\":12226:12235   */\n  add\n    /* \"#utility.yul\":12219:12235   */\n  swap1\n  pop\n    /* \"#utility.yul\":12254:12257   */\n  dup1\n    /* \"#utility.yul\":12251:12252   */\n  dup3\n    /* \"#utility.yul\":12248:12258   */\n  gt\n    /* \"#utility.yul\":12245:12281   */\n  iszero\n  tag_227\n  jumpi\n    /* \"#utility.yul\":12261:12279   */\n  tag_228\n  tag_71\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":12245:12281   */\ntag_227:\n    /* \"#utility.yul\":12097:12288   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12294:12412   */\ntag_78:\n    /* \"#utility.yul\":12381:12405   */\n  tag_230\n    /* \"#utility.yul\":12399:12404   */\n  dup2\n    /* \"#utility.yul\":12381:12405   */\n  tag_59\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":12376:12379   */\n  dup3\n    /* \"#utility.yul\":12369:12406   */\n  mstore\n    /* \"#utility.yul\":12294:12412   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12418:12860   */\ntag_34:\n    /* \"#utility.yul\":12567:12571   */\n  0x00\n    /* \"#utility.yul\":12605:12607   */\n  0x60\n    /* \"#utility.yul\":12594:12603   */\n  dup3\n    /* \"#utility.yul\":12590:12608   */\n  add\n    /* \"#utility.yul\":12582:12608   */\n  swap1\n  pop\n    /* \"#utility.yul\":12618:12689   */\n  tag_232\n    /* \"#utility.yul\":12686:12687   */\n  0x00\n    /* \"#utility.yul\":12675:12684   */\n  dup4\n    /* \"#utility.yul\":12671:12688   */\n  add\n    /* \"#utility.yul\":12662:12668   */\n  dup7\n    /* \"#utility.yul\":12618:12689   */\n  tag_77\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":12699:12771   */\n  tag_233\n    /* \"#utility.yul\":12767:12769   */\n  0x20\n    /* \"#utility.yul\":12756:12765   */\n  dup4\n    /* \"#utility.yul\":12752:12770   */\n  add\n    /* \"#utility.yul\":12743:12749   */\n  dup6\n    /* \"#utility.yul\":12699:12771   */\n  tag_78\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":12781:12853   */\n  tag_234\n    /* \"#utility.yul\":12849:12851   */\n  0x40\n    /* \"#utility.yul\":12838:12847   */\n  dup4\n    /* \"#utility.yul\":12834:12852   */\n  add\n    /* \"#utility.yul\":12825:12831   */\n  dup5\n    /* \"#utility.yul\":12781:12853   */\n  tag_78\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":12418:12860   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12866:13088   */\ntag_38:\n    /* \"#utility.yul\":12959:12963   */\n  0x00\n    /* \"#utility.yul\":12997:12999   */\n  0x20\n    /* \"#utility.yul\":12986:12995   */\n  dup3\n    /* \"#utility.yul\":12982:13000   */\n  add\n    /* \"#utility.yul\":12974:13000   */\n  swap1\n  pop\n    /* \"#utility.yul\":13010:13081   */\n  tag_236\n    /* \"#utility.yul\":13078:13079   */\n  0x00\n    /* \"#utility.yul\":13067:13076   */\n  dup4\n    /* \"#utility.yul\":13063:13080   */\n  add\n    /* \"#utility.yul\":13054:13060   */\n  dup5\n    /* \"#utility.yul\":13010:13081   */\n  tag_78\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12866:13088   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/testtoken.sol\":217:538  contract MyToken is ERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/testtoken.sol\":217:538  contract MyToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2452:2541  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4671:4857  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3522:3619  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5417:5661  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6056:6290  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3677:3793  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2654:2747  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6959:7452  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3988:4166  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4224:4364  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2452:2541  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2497:2510  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2529:2534  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2522:2534  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2452:2541  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4671:4857  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4744:4748  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4760:4773  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:4788  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:4786  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:4788  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4760:4788  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4798:4829  _approve(owner, spender, value) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4807:4812  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4814:4821  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4828  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4798:4806  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4798:4829  _approve(owner, spender, value) */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4846:4850  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4839:4850  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4671:4857  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3522:3619  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3574:3581  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3600:3612  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3593:3612  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3522:3619  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5417:5661  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5504:5508  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5520:5535  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5550  _msgSender() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5548  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5550  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5520:5550  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5560:5597  _spendAllowance(from, spender, value) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5576:5580  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5582:5589  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5591:5596  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5560:5575  _spendAllowance */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5560:5597  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5607:5633  _transfer(from, to, value) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5617:5621  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5623:5625  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5627:5632  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5607:5616  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5607:5633  _transfer(from, to, value) */\n      jump\t// in\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5650:5654  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5643:5654  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5417:5661  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3429:3434  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3453:3455  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3446:3455  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6056:6290  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6144:6148  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6160:6173  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6176:6188  _msgSender() */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6176:6186  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6176:6188  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6160:6188  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6198:6262  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6207:6212  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6214:6221  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6251:6261  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6248  allowance(owner, spender) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6238  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6247  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6232  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6248  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6261  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6198:6206  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6198:6262  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6279:6283  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6272:6283  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6056:6290  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3677:3793  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3742:3749  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3768:3777  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3768:3786  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3778:3785  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3768:3786  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3761:3786  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3677:3793  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2654:2747  function symbol() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2701:2714  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2733:2740  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2726:2740  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2654:2747  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6959:7452  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7054:7058  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7070:7083  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7086:7098  _msgSender() */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7086:7096  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7086:7098  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7070:7098  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7108:7132  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7135:7160  allowance(owner, spender) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7145:7150  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7152:7159  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7135:7144  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7135:7160  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7108:7160  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7193:7210  requestedDecrease */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7174:7190  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7174:7210  currentAllowance < requestedDecrease */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7170:7318  if (currentAllowance < requestedDecrease) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7262:7269  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7271:7287  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7289:7306  requestedDecrease */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7233:7307  ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease) */\n      mload(0x40)\n      0xa60f030c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7170:7318  if (currentAllowance < requestedDecrease) {... */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7351:7413  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7360:7365  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7367:7374  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7395:7412  requestedDecrease */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7376:7392  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7376:7412  currentAllowance - requestedDecrease */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7351:7359  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7351:7413  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      jump\t// in\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7441:7445  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7434:7445  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6959:7452  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3988:4166  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4057:4061  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4073:4086  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4101  _msgSender() */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4099  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4101  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4073:4101  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4111:4138  _transfer(owner, to, value) */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4121:4126  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4128:4130  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4132:4137  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4111:4120  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4111:4138  _transfer(owner, to, value) */\n      jump\t// in\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4155:4159  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4148:4159  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3988:4166  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4224:4364  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4304:4311  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4341  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4348  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4342:4347  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4348  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4357  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4349:4356  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4357  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4323:4357  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4224:4364  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":694:701  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":713:730  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11044:11180  function _approve(address owner, address spender, uint256 value) internal virtual {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11136:11173  _approve(owner, spender, value, true) */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11145:11150  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11152:11159  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11161:11166  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11168:11172  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11136:11144  _approve */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11136:11173  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11044:11180  function _approve(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12739:13216  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12838:12862  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12865:12890  allowance(owner, spender) */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12875:12880  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12882:12889  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12865:12874  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12865:12890  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12838:12890  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12924:12941  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12904:12920  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12904:12941  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12900:13210  if (currentAllowance != type(uint256).max) {... */\n      tag_113\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12980:12985  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12961:12977  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12961:12985  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12957:13087  if (currentAllowance < value) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13039:13046  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13048:13064  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13066:13071  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13012:13072  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12957:13087  if (currentAllowance < value) {... */\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13128:13185  _approve(owner, spender, currentAllowance - value, false) */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13137:13142  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13144:13151  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13172:13177  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13153:13169  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13153:13177  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13179:13184  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13128:13136  _approve */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13128:13185  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12900:13210  if (currentAllowance != type(uint256).max) {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12828:13216  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12739:13216  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7825:8125  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7924:7925  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7926  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7912  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7926  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7904:7990  if (from == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7976:7977  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7949:7979  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7904:7990  if (from == address(0)) {... */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8017:8018  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8003:8019  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8003:8005  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8003:8019  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7999:8085  if (to == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8071:8072  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8042:8074  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7999:8085  if (to == address(0)) {... */\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8094:8118  _update(from, to, value) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8102:8106  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8108:8110  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8112:8117  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8094:8101  _update */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8094:8118  _update(from, to, value) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7825:8125  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12028:12460  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12157:12158  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12140:12159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12140:12145  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12140:12159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12136:12225  if (owner == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12211:12212  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12182:12214  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12136:12225  if (owner == address(0)) {... */\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12257:12258  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12238:12259  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12238:12245  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12238:12259  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12234:12324  if (spender == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12310:12311  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12282:12313  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12234:12324  if (spender == address(0)) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12363:12368  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12333:12344  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12333:12351  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12345:12350  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12333:12351  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12333:12360  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12352:12359  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12333:12360  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12333:12368  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12382:12391  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12378:12454  if (emitEvent) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12428:12435  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12412:12443  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12421:12426  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12412:12443  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12437:12442  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12412:12443  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12378:12454  if (emitEvent) {... */\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12028:12460  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8538:8539  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8526  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8674:8679  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8670  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8679  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_134\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n      jump(tag_135)\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8729  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8741  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8742:8746  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8747  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8779:8784  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8776  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8784  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8836:8840  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8853  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8855:8860  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8811:8861  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9028:9033  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9025  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9033  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9005  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9006:9010  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9033  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8696:9058  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9086:9087  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9074  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9251:9256  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9247  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9256  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n      jump(tag_139)\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9463:9468  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9455  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9456:9458  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9468  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9523:9525  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9517:9521  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9527:9532  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_141:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_142:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_143:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_168:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_168)\n    tag_170:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_144:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_145:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_173\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_141\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":818:889   */\n      tag_174\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_142\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_175\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_143\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":988:1017   */\n      tag_176\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_144\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_178\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_145\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_147:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_149:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_150:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_184\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_149\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_151:\n        /* \"#utility.yul\":1983:2007   */\n      tag_186\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_150\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_187:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_152:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_189\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_151\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_153:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_154:\n        /* \"#utility.yul\":2339:2363   */\n      tag_192\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_153\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_193:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_155:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_195\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_154\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_198\n      tag_147\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2632:2751   */\n    tag_197:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_199\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_152\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_200\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_155\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_156:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_157:\n        /* \"#utility.yul\":3196:3217   */\n      tag_203\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_156\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_205\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_157\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_158:\n        /* \"#utility.yul\":3533:3557   */\n      tag_207\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_209\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_158\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_212\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3908:4027   */\n    tag_211:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_213\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_152\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_214\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_152\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_215\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_159:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_160:\n        /* \"#utility.yul\":4598:4620   */\n      tag_218\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_159\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_220\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_160\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_223\n      tag_147\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4929:5048   */\n    tag_222:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_224\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_152\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_227\n      tag_147\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5281:5400   */\n    tag_226:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_228\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_152\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_229\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_152\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_161:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_232:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_234\n      tag_161\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6084:6168   */\n    tag_233:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_162:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_88:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_237\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_153\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_238\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_153\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_240\n      tag_162\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6514:6550   */\n    tag_239:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6681   */\n    tag_163:\n        /* \"#utility.yul\":6650:6674   */\n      tag_242\n        /* \"#utility.yul\":6668:6673   */\n      dup2\n        /* \"#utility.yul\":6650:6674   */\n      tag_150\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6645:6648   */\n      dup3\n        /* \"#utility.yul\":6638:6675   */\n      mstore\n        /* \"#utility.yul\":6563:6681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6687:7129   */\n    tag_101:\n        /* \"#utility.yul\":6836:6840   */\n      0x00\n        /* \"#utility.yul\":6874:6876   */\n      0x60\n        /* \"#utility.yul\":6863:6872   */\n      dup3\n        /* \"#utility.yul\":6859:6877   */\n      add\n        /* \"#utility.yul\":6851:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6887:6958   */\n      tag_244\n        /* \"#utility.yul\":6955:6956   */\n      0x00\n        /* \"#utility.yul\":6944:6953   */\n      dup4\n        /* \"#utility.yul\":6940:6957   */\n      add\n        /* \"#utility.yul\":6931:6937   */\n      dup7\n        /* \"#utility.yul\":6887:6958   */\n      tag_163\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6968:7040   */\n      tag_245\n        /* \"#utility.yul\":7036:7038   */\n      0x20\n        /* \"#utility.yul\":7025:7034   */\n      dup4\n        /* \"#utility.yul\":7021:7039   */\n      add\n        /* \"#utility.yul\":7012:7018   */\n      dup6\n        /* \"#utility.yul\":6968:7040   */\n      tag_158\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7050:7122   */\n      tag_246\n        /* \"#utility.yul\":7118:7120   */\n      0x40\n        /* \"#utility.yul\":7107:7116   */\n      dup4\n        /* \"#utility.yul\":7103:7121   */\n      add\n        /* \"#utility.yul\":7094:7100   */\n      dup5\n        /* \"#utility.yul\":7050:7122   */\n      tag_158\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6687:7129   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7135:7357   */\n    tag_120:\n        /* \"#utility.yul\":7228:7232   */\n      0x00\n        /* \"#utility.yul\":7266:7268   */\n      0x20\n        /* \"#utility.yul\":7255:7264   */\n      dup3\n        /* \"#utility.yul\":7251:7269   */\n      add\n        /* \"#utility.yul\":7243:7269   */\n      swap1\n      pop\n        /* \"#utility.yul\":7279:7350   */\n      tag_248\n        /* \"#utility.yul\":7347:7348   */\n      0x00\n        /* \"#utility.yul\":7336:7345   */\n      dup4\n        /* \"#utility.yul\":7332:7349   */\n      add\n        /* \"#utility.yul\":7323:7329   */\n      dup5\n        /* \"#utility.yul\":7279:7350   */\n      tag_163\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7135:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d7695fb964fcc22a6c8daf70a0bc95e4e222dbb82f4ff3b7ed0a970455f6ee964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_606": {
									"entryPoint": 175,
									"id": 606,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_573": {
									"entryPoint": 313,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_256": {
									"entryPoint": 167,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13091:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:6",
																"statements": []
															},
															"src": "1701:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:6"
															},
															"nodeType": "YulIf",
															"src": "2117:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:6",
														"type": ""
													}
												],
												"src": "1862:434:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:6"
															},
															"nodeType": "YulIf",
															"src": "2399:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:6",
														"type": ""
													}
												],
												"src": "2316:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:6"
															},
															"nodeType": "YulIf",
															"src": "2801:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:6",
														"type": ""
													}
												],
												"src": "2677:853:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:6",
														"type": ""
													}
												],
												"src": "3536:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:6"
															},
															"nodeType": "YulIf",
															"src": "3966:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:6"
															},
															"nodeType": "YulIf",
															"src": "4057:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:6",
														"type": ""
													}
												],
												"src": "3827:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:6",
														"type": ""
													}
												],
												"src": "4153:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:6",
														"type": ""
													}
												],
												"src": "4300:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:6",
														"type": ""
													}
												],
												"src": "4399:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:6",
														"type": ""
													}
												],
												"src": "4512:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:6",
														"type": ""
													}
												],
												"src": "4911:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:6",
														"type": ""
													}
												],
												"src": "4994:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:6",
														"type": ""
													}
												],
												"src": "5060:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:6",
														"type": ""
													}
												],
												"src": "5208:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:6",
														"type": ""
													}
												],
												"src": "5289:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:6",
														"type": ""
													}
												],
												"src": "5564:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:6",
														"type": ""
													}
												],
												"src": "5643:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:6",
																"statements": []
															},
															"src": "5898:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:6",
														"type": ""
													}
												],
												"src": "5838:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:6"
															},
															"nodeType": "YulIf",
															"src": "6120:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:6",
														"type": ""
													}
												],
												"src": "6030:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:6",
														"type": ""
													}
												],
												"src": "6579:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:6",
														"type": ""
													}
												],
												"src": "6702:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:6",
														"type": ""
													}
												],
												"src": "6876:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:6"
															},
															"nodeType": "YulIf",
															"src": "7381:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:6",
																					"statements": []
																				},
																				"src": "7867:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:6",
														"type": ""
													}
												],
												"src": "7176:1395:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8605:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8622:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8625:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8615:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8615:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8615:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8722:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8712:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8712:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8743:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8746:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8736:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8736:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8577:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8814:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8824:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8849:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8852:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8845:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "8824:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8795:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "8805:8:6",
														"type": ""
													}
												],
												"src": "8763:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8944:775:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8954:15:6",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "8963:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8954:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8978:14:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "8987:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8978:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9036:677:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9124:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "9126:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9126:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9126:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9102:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "9112:3:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "9117:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "9108:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9108:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "9099:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9099:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "9096:50:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9191:419:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9571:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "9584:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "9591:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "9580:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9580:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "9571:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9166:8:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9176:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9162:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9162:16:6"
																		},
																		"nodeType": "YulIf",
																		"src": "9159:451:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9623:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9635:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9641:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "9631:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9631:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "9623:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9659:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9694:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "9671:22:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9671:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "9659:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9012:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9022:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9009:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9009:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9025:2:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9005:3:6",
																"statements": []
															},
															"src": "9001:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "8899:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "8907:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8914:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "8924:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8932:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8939:4:6",
														"type": ""
													}
												],
												"src": "8871:848:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9785:1013:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9980:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9982:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9991:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9982:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9993:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9970:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9963:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9963:16:6"
															},
															"nodeType": "YulIf",
															"src": "9960:40:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10025:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10027:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10036:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10027:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10038:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10019:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10012:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10012:12:6"
															},
															"nodeType": "YulIf",
															"src": "10009:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10155:20:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "10157:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10166:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "10157:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "10168:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10148:27:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10153:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10199:176:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10234:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "10236:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10236:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10236:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "10219:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10229:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "10216:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10216:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "10213:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10269:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10282:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "10285:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "10278:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10278:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "10269:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10325:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "10327:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10327:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10327:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "10313:5:6"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "10320:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "10310:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10310:14:6"
																				},
																				"nodeType": "YulIf",
																				"src": "10307:40:6"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "10360:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10184:191:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10189:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "10105:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "10098:277:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10507:123:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10521:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10534:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "10540:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "10530:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10530:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10521:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10580:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "10582:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10582:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10582:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "10568:5:6"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "10575:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "10565:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10565:14:6"
																		},
																		"nodeType": "YulIf",
																		"src": "10562:40:6"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10615:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "10410:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10416:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10407:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10407:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "10424:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10434:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10421:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10421:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10403:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10403:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "10459:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10465:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10456:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10456:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "10474:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10484:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10471:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10471:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10387:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:111:6"
															},
															"nodeType": "YulIf",
															"src": "10384:246:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10640:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10674:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10677:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10683:8:6"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "10693:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "10655:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10640:5:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10647:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10736:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10738:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10738:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10738:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "10713:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "10724:3:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "10729:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10710:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:25:6"
															},
															"nodeType": "YulIf",
															"src": "10707:51:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10767:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "10780:5:6"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10787:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10776:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10776:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10767:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9755:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9761:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "9771:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9779:5:6",
														"type": ""
													}
												],
												"src": "9725:1073:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10870:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10880:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10906:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10888:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10880:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10920:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10950:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10932:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10932:27:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "10920:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10969:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10999:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11005:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11015:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "10978:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10969:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10845:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10851:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10864:5:6",
														"type": ""
													}
												],
												"src": "10804:285:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11143:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11153:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11176:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11158:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11153:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11187:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11210:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11192:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11192:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11187:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11221:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11244:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11247:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11240:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11225:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11258:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11287:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11269:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11269:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11258:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11476:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11478:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11478:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11478:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11409:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11402:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11402:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11432:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11439:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11448:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11435:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11435:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11429:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11429:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11382:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11382:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11362:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11362:113:6"
															},
															"nodeType": "YulIf",
															"src": "11359:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11126:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11129:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11135:7:6",
														"type": ""
													}
												],
												"src": "11095:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11556:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11566:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11581:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11588:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11577:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11577:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11566:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11538:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11548:7:6",
														"type": ""
													}
												],
												"src": "11511:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11688:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11698:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11727:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11709:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11709:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11698:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11670:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11680:7:6",
														"type": ""
													}
												],
												"src": "11643:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11810:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11827:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11850:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11832:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11832:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11820:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11820:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11820:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11798:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11805:3:6",
														"type": ""
													}
												],
												"src": "11745:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11967:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11977:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11989:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12000:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11985:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11977:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12057:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12070:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12081:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12066:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12013:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12013:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11939:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11951:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11962:4:6",
														"type": ""
													}
												],
												"src": "11869:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12141:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12151:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12174:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12156:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12156:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12151:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12185:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12208:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12190:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12190:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12185:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12219:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12230:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12233:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12219:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12259:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12261:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12261:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12261:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12251:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12254:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12248:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12248:10:6"
															},
															"nodeType": "YulIf",
															"src": "12245:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12128:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12131:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12137:3:6",
														"type": ""
													}
												],
												"src": "12097:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12359:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12376:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12399:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12381:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12381:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12369:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12369:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12347:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12354:3:6",
														"type": ""
													}
												],
												"src": "12294:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12572:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12582:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12594:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12605:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12590:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12590:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12582:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12662:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12675:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12686:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12671:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12671:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12618:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12618:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12618:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12743:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12756:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12767:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12752:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12752:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12699:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12699:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12699:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12825:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12838:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12849:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12834:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12834:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12781:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12781:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12781:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12528:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12540:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12548:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12556:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12567:4:6",
														"type": ""
													}
												],
												"src": "12418:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12964:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12974:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12986:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12997:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12982:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12974:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13054:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13067:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13078:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13063:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13063:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13010:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13010:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13010:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12936:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12948:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12959:4:6",
														"type": ""
													}
												],
												"src": "12866:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001ac638038062001ac68339818101604052810190620000369190620004e2565b818181600390816200004991906200079c565b5080600490816200005b91906200079c565b5050506200009f3362000073620000a760201b60201c565b60ff16600a620000849190620009fd565b614e2062000093919062000a4d565b620000af60201b60201c565b505062000b96565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000122575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000119919062000ada565b60405180910390fd5b620001355f83836200013960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200018d578060025f82825462000180919062000af5565b925050819055506200025e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000219578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620002109392919062000b40565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002a7578060025f8282540392505081905550620002f1565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000350919062000b7b565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003be8262000376565b810181811067ffffffffffffffff82111715620003e057620003df62000386565b5b80604052505050565b5f620003f46200035d565b9050620004028282620003b3565b919050565b5f67ffffffffffffffff82111562000424576200042362000386565b5b6200042f8262000376565b9050602081019050919050565b5f5b838110156200045b5780820151818401526020810190506200043e565b5f8484015250505050565b5f6200047c620004768462000407565b620003e9565b9050828152602081018484840111156200049b576200049a62000372565b5b620004a88482856200043c565b509392505050565b5f82601f830112620004c757620004c66200036e565b5b8151620004d984826020860162000466565b91505092915050565b5f8060408385031215620004fb57620004fa62000366565b5b5f83015167ffffffffffffffff8111156200051b576200051a6200036a565b5b6200052985828601620004b0565b925050602083015167ffffffffffffffff8111156200054d576200054c6200036a565b5b6200055b85828601620004b0565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620005b457607f821691505b602082108103620005ca57620005c96200056f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200062e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005f1565b6200063a8683620005f1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620006846200067e620006788462000652565b6200065b565b62000652565b9050919050565b5f819050919050565b6200069f8362000664565b620006b7620006ae826200068b565b848454620005fd565b825550505050565b5f90565b620006cd620006bf565b620006da81848462000694565b505050565b5b818110156200070157620006f55f82620006c3565b600181019050620006e0565b5050565b601f82111562000750576200071a81620005d0565b6200072584620005e2565b8101602085101562000735578190505b6200074d6200074485620005e2565b830182620006df565b50505b505050565b5f82821c905092915050565b5f620007725f198460080262000755565b1980831691505092915050565b5f6200078c838362000761565b9150826002028217905092915050565b620007a78262000565565b67ffffffffffffffff811115620007c357620007c262000386565b5b620007cf82546200059c565b620007dc82828562000705565b5f60209050601f83116001811462000812575f8415620007fd578287015190505b6200080985826200077f565b86555062000878565b601f1984166200082286620005d0565b5f5b828110156200084b5784890151825560018201915060208501945060208101905062000824565b868310156200086b578489015162000867601f89168262000761565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200090a57808604811115620008e257620008e162000880565b5b6001851615620008f25780820291505b80810290506200090285620008ad565b9450620008c2565b94509492505050565b5f82620009245760019050620009f6565b8162000933575f9050620009f6565b81600181146200094c576002811462000957576200098d565b6001915050620009f6565b60ff8411156200096c576200096b62000880565b5b8360020a91508482111562000986576200098562000880565b5b50620009f6565b5060208310610133831016604e8410600b8410161715620009c75782820a905083811115620009c157620009c062000880565b5b620009f6565b620009d68484846001620008b9565b92509050818404811115620009f057620009ef62000880565b5b81810290505b9392505050565b5f62000a098262000652565b915062000a168362000652565b925062000a457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000913565b905092915050565b5f62000a598262000652565b915062000a668362000652565b925082820262000a768162000652565b9150828204841483151762000a905762000a8f62000880565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000ac28262000a97565b9050919050565b62000ad48162000ab6565b82525050565b5f60208201905062000aef5f83018462000ac9565b92915050565b5f62000b018262000652565b915062000b0e8362000652565b925082820190508082111562000b295762000b2862000880565b5b92915050565b62000b3a8162000652565b82525050565b5f60608201905062000b555f83018662000ac9565b62000b64602083018562000b2f565b62000b73604083018462000b2f565b949350505050565b5f60208201905062000b905f83018462000b2f565b92915050565b610f228062000ba45f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610b9b565b60405180910390f35b6100e360048036038101906100de9190610c4c565b610303565b6040516100f09190610ca4565b60405180910390f35b610101610325565b60405161010e9190610ccc565b60405180910390f35b610131600480360381019061012c9190610ce5565b61032e565b60405161013e9190610ca4565b60405180910390f35b61014f61035c565b60405161015c9190610d50565b60405180910390f35b61017f600480360381019061017a9190610c4c565b610364565b60405161018c9190610ca4565b60405180910390f35b6101af60048036038101906101aa9190610d69565b61039a565b6040516101bc9190610ccc565b60405180910390f35b6101cd6103df565b6040516101da9190610b9b565b60405180910390f35b6101fd60048036038101906101f89190610c4c565b61046f565b60405161020a9190610ca4565b60405180910390f35b61022d60048036038101906102289190610c4c565b6104ea565b60405161023a9190610ca4565b60405180910390f35b61025d60048036038101906102589190610d94565b61050c565b60405161026a9190610ccc565b60405180910390f35b60606003805461028290610dff565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610dff565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d61058e565b905061031a818585610595565b600191505092915050565b5f600254905090565b5f8061033861058e565b90506103458582856105a7565b610350858585610639565b60019150509392505050565b5f6012905090565b5f8061036e61058e565b905061038f818585610380858961050c565b61038a9190610e5c565b610595565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610dff565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610dff565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f8061047961058e565b90505f610486828661050c565b9050838110156104d1578481856040517fa60f030c0000000000000000000000000000000000000000000000000000000081526004016104c893929190610e9e565b60405180910390fd5b6104de8286868403610595565b60019250505092915050565b5f806104f461058e565b9050610501818585610639565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6105a28383836001610729565b505050565b5f6105b2848461050c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106335781811015610624578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061b93929190610e9e565b60405180910390fd5b61063284848484035f610729565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106a09190610ed3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610719575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107109190610ed3565b60405180910390fd5b6107248383836108f8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610799575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107909190610ed3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610809575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108009190610ed3565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156108f2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108e99190610ccc565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610948578060025f82825461093c9190610e5c565b92505081905550610a16565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156109d1578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109c893929190610e9e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d578060025f8282540392505081905550610aa7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b049190610ccc565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b48578082015181840152602081019050610b2d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610b6d82610b11565b610b778185610b1b565b9350610b87818560208601610b2b565b610b9081610b53565b840191505092915050565b5f6020820190508181035f830152610bb38184610b63565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610be882610bbf565b9050919050565b610bf881610bde565b8114610c02575f80fd5b50565b5f81359050610c1381610bef565b92915050565b5f819050919050565b610c2b81610c19565b8114610c35575f80fd5b50565b5f81359050610c4681610c22565b92915050565b5f8060408385031215610c6257610c61610bbb565b5b5f610c6f85828601610c05565b9250506020610c8085828601610c38565b9150509250929050565b5f8115159050919050565b610c9e81610c8a565b82525050565b5f602082019050610cb75f830184610c95565b92915050565b610cc681610c19565b82525050565b5f602082019050610cdf5f830184610cbd565b92915050565b5f805f60608486031215610cfc57610cfb610bbb565b5b5f610d0986828701610c05565b9350506020610d1a86828701610c05565b9250506040610d2b86828701610c38565b9150509250925092565b5f60ff82169050919050565b610d4a81610d35565b82525050565b5f602082019050610d635f830184610d41565b92915050565b5f60208284031215610d7e57610d7d610bbb565b5b5f610d8b84828501610c05565b91505092915050565b5f8060408385031215610daa57610da9610bbb565b5b5f610db785828601610c05565b9250506020610dc885828601610c05565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e1657607f821691505b602082108103610e2957610e28610dd2565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6682610c19565b9150610e7183610c19565b9250828201905080821115610e8957610e88610e2f565b5b92915050565b610e9881610bde565b82525050565b5f606082019050610eb15f830186610e8f565b610ebe6020830185610cbd565b610ecb6040830184610cbd565b949350505050565b5f602082019050610ee65f830184610e8f565b9291505056fea26469706673582212206d7695fb964fcc22a6c8daf70a0bc95e4e222dbb82f4ff3b7ed0a970455f6ee964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AC6 CODESIZE SUB DUP1 PUSH3 0x1AC6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x4E2 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x79C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x79C JUMP JUMPDEST POP POP POP PUSH3 0x9F CALLER PUSH3 0x73 PUSH3 0xA7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x9FD JUMP JUMPDEST PUSH2 0x4E20 PUSH3 0x93 SWAP2 SWAP1 PUSH3 0xA4D JUMP JUMPDEST PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xB96 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x122 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x119 SWAP2 SWAP1 PUSH3 0xADA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x135 PUSH0 DUP4 DUP4 PUSH3 0x139 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x18D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x180 SWAP2 SWAP1 PUSH3 0xAF5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x25E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x219 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x210 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2A7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x2F1 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x350 SWAP2 SWAP1 PUSH3 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x3BE DUP3 PUSH3 0x376 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3E0 JUMPI PUSH3 0x3DF PUSH3 0x386 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3F4 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP PUSH3 0x402 DUP3 DUP3 PUSH3 0x3B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x424 JUMPI PUSH3 0x423 PUSH3 0x386 JUMP JUMPDEST JUMPDEST PUSH3 0x42F DUP3 PUSH3 0x376 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x45B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x43E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47C PUSH3 0x476 DUP5 PUSH3 0x407 JUMP JUMPDEST PUSH3 0x3E9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x49B JUMPI PUSH3 0x49A PUSH3 0x372 JUMP JUMPDEST JUMPDEST PUSH3 0x4A8 DUP5 DUP3 DUP6 PUSH3 0x43C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4C7 JUMPI PUSH3 0x4C6 PUSH3 0x36E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4D9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x4FB JUMPI PUSH3 0x4FA PUSH3 0x366 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x51B JUMPI PUSH3 0x51A PUSH3 0x36A JUMP JUMPDEST JUMPDEST PUSH3 0x529 DUP6 DUP3 DUP7 ADD PUSH3 0x4B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x54D JUMPI PUSH3 0x54C PUSH3 0x36A JUMP JUMPDEST JUMPDEST PUSH3 0x55B DUP6 DUP3 DUP7 ADD PUSH3 0x4B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5CA JUMPI PUSH3 0x5C9 PUSH3 0x56F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x62E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x5F1 JUMP JUMPDEST PUSH3 0x63A DUP7 DUP4 PUSH3 0x5F1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x684 PUSH3 0x67E PUSH3 0x678 DUP5 PUSH3 0x652 JUMP JUMPDEST PUSH3 0x65B JUMP JUMPDEST PUSH3 0x652 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x69F DUP4 PUSH3 0x664 JUMP JUMPDEST PUSH3 0x6B7 PUSH3 0x6AE DUP3 PUSH3 0x68B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5FD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x6CD PUSH3 0x6BF JUMP JUMPDEST PUSH3 0x6DA DUP2 DUP5 DUP5 PUSH3 0x694 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x701 JUMPI PUSH3 0x6F5 PUSH0 DUP3 PUSH3 0x6C3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x6E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x750 JUMPI PUSH3 0x71A DUP2 PUSH3 0x5D0 JUMP JUMPDEST PUSH3 0x725 DUP5 PUSH3 0x5E2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x735 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x74D PUSH3 0x744 DUP6 PUSH3 0x5E2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x6DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x772 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x755 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x78C DUP4 DUP4 PUSH3 0x761 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7A7 DUP3 PUSH3 0x565 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7C3 JUMPI PUSH3 0x7C2 PUSH3 0x386 JUMP JUMPDEST JUMPDEST PUSH3 0x7CF DUP3 SLOAD PUSH3 0x59C JUMP JUMPDEST PUSH3 0x7DC DUP3 DUP3 DUP6 PUSH3 0x705 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x812 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x7FD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x809 DUP6 DUP3 PUSH3 0x77F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x878 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x822 DUP7 PUSH3 0x5D0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x84B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x824 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x86B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x867 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x761 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x90A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x8E2 JUMPI PUSH3 0x8E1 PUSH3 0x880 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x8F2 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x902 DUP6 PUSH3 0x8AD JUMP JUMPDEST SWAP5 POP PUSH3 0x8C2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x924 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x9F6 JUMP JUMPDEST DUP2 PUSH3 0x933 JUMPI PUSH0 SWAP1 POP PUSH3 0x9F6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x94C JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x957 JUMPI PUSH3 0x98D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x9F6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x96C JUMPI PUSH3 0x96B PUSH3 0x880 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x986 JUMPI PUSH3 0x985 PUSH3 0x880 JUMP JUMPDEST JUMPDEST POP PUSH3 0x9F6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x9C7 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x9C1 JUMPI PUSH3 0x9C0 PUSH3 0x880 JUMP JUMPDEST JUMPDEST PUSH3 0x9F6 JUMP JUMPDEST PUSH3 0x9D6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x8B9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x9F0 JUMPI PUSH3 0x9EF PUSH3 0x880 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA09 DUP3 PUSH3 0x652 JUMP JUMPDEST SWAP2 POP PUSH3 0xA16 DUP4 PUSH3 0x652 JUMP JUMPDEST SWAP3 POP PUSH3 0xA45 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x913 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA59 DUP3 PUSH3 0x652 JUMP JUMPDEST SWAP2 POP PUSH3 0xA66 DUP4 PUSH3 0x652 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xA76 DUP2 PUSH3 0x652 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xA90 JUMPI PUSH3 0xA8F PUSH3 0x880 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xAC2 DUP3 PUSH3 0xA97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAD4 DUP2 PUSH3 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xAEF PUSH0 DUP4 ADD DUP5 PUSH3 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB01 DUP3 PUSH3 0x652 JUMP JUMPDEST SWAP2 POP PUSH3 0xB0E DUP4 PUSH3 0x652 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB29 JUMPI PUSH3 0xB28 PUSH3 0x880 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB3A DUP2 PUSH3 0x652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB55 PUSH0 DUP4 ADD DUP7 PUSH3 0xAC9 JUMP JUMPDEST PUSH3 0xB64 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB2F JUMP JUMPDEST PUSH3 0xB73 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB90 PUSH0 DUP4 ADD DUP5 PUSH3 0xB2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF22 DUP1 PUSH3 0xBA4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x479 PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x486 DUP3 DUP7 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4F4 PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x501 DUP2 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B2 DUP5 DUP5 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x633 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x729 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x719 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x724 DUP4 DUP4 DUP4 PUSH2 0x8F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x799 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x809 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8F2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x948 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x93C SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA16 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9D1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAA7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB48 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB2D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB6D DUP3 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0xB77 DUP2 DUP6 PUSH2 0xB1B JUMP JUMPDEST SWAP4 POP PUSH2 0xB87 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB90 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBB3 DUP2 DUP5 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBE8 DUP3 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP2 EQ PUSH2 0xC02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC13 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP2 EQ PUSH2 0xC35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC46 DUP2 PUSH2 0xC22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC62 JUMPI PUSH2 0xC61 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC6F DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC80 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB7 PUSH0 DUP4 ADD DUP5 PUSH2 0xC95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDF PUSH0 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD09 DUP7 DUP3 DUP8 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD1A DUP7 DUP3 DUP8 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD2B DUP7 DUP3 DUP8 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD63 PUSH0 DUP4 ADD DUP5 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD8B DUP5 DUP3 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xDA9 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB7 DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE16 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE66 DUP3 PUSH2 0xC19 JUMP JUMPDEST SWAP2 POP PUSH2 0xE71 DUP4 PUSH2 0xC19 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE89 JUMPI PUSH2 0xE88 PUSH2 0xE2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH0 DUP4 ADD DUP7 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0xEBE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xECB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x7695FB964FCC22A6C8DAF70A0BC9 0x5E 0x4E 0x22 0x2D 0xBB DUP3 DELEGATECALL SELFDESTRUCT EXTCODESIZE PUSH31 0xD0A970455F6EE964736F6C6343000814003300000000000000000000000000 ",
							"sourceMap": "217:321:0:-:0;;;250:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;310:4;316:6;2348:5:2;2340;:13;;;;;;:::i;:::-;;2373:7;2363;:17;;;;;;:::i;:::-;;2274:113;;480:47:0::1;486:10;515;:8;;;:10;;:::i;:::-;510:16;;506:2;:20;;;;:::i;:::-;498:5;:28;;;;:::i;:::-;480:5;;;:47;;:::i;:::-;250:285:::0;;217:321;;3380:82:2;3429:5;3453:2;3446:9;;3380:82;:::o;9883:208::-;9972:1;9953:21;;:7;:21;;;9949:91;;10026:1;9997:32;;;;;;;;;;;:::i;:::-;;;;;;;;9949:91;10049:35;10065:1;10069:7;10078:5;10049:7;;;:35;;:::i;:::-;9883:208;;:::o;8433:1107::-;8538:1;8522:18;;:4;:18;;;8518:540;;8674:5;8658:12;;:21;;;;;;;:::i;:::-;;;;;;;;8518:540;;;8710:19;8732:9;:15;8742:4;8732:15;;;;;;;;;;;;;;;;8710:37;;8779:5;8765:11;:19;8761:115;;;8836:4;8842:11;8855:5;8811:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8761:115;9028:5;9014:11;:19;8996:9;:15;9006:4;8996:15;;;;;;;;;;;;;;;:37;;;;8696:362;8518:540;9086:1;9072:16;;:2;:16;;;9068:425;;9251:5;9235:12;;:21;;;;;;;;;;;9068:425;;;9463:5;9446:9;:13;9456:2;9446:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;9068:425;9523:2;9508:25;;9517:4;9508:25;;;9527:5;9508:25;;;;;;:::i;:::-;;;;;;;;8433:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;8577:180::-;8625:77;8622:1;8615:88;8722:4;8719:1;8712:15;8746:4;8743:1;8736:15;8763:102;8805:8;8852:5;8849:1;8845:13;8824:34;;8763:102;;;:::o;8871:848::-;8932:5;8939:4;8963:6;8954:15;;8987:5;8978:14;;9001:712;9022:1;9012:8;9009:15;9001:712;;;9117:4;9112:3;9108:14;9102:4;9099:24;9096:50;;;9126:18;;:::i;:::-;9096:50;9176:1;9166:8;9162:16;9159:451;;;9591:4;9584:5;9580:16;9571:25;;9159:451;9641:4;9635;9631:15;9623:23;;9671:32;9694:8;9671:32;:::i;:::-;9659:44;;9001:712;;;8871:848;;;;;;;:::o;9725:1073::-;9779:5;9970:8;9960:40;;9991:1;9982:10;;9993:5;;9960:40;10019:4;10009:36;;10036:1;10027:10;;10038:5;;10009:36;10105:4;10153:1;10148:27;;;;10189:1;10184:191;;;;10098:277;;10148:27;10166:1;10157:10;;10168:5;;;10184:191;10229:3;10219:8;10216:17;10213:43;;;10236:18;;:::i;:::-;10213:43;10285:8;10282:1;10278:16;10269:25;;10320:3;10313:5;10310:14;10307:40;;;10327:18;;:::i;:::-;10307:40;10360:5;;;10098:277;;10484:2;10474:8;10471:16;10465:3;10459:4;10456:13;10452:36;10434:2;10424:8;10421:16;10416:2;10410:4;10407:12;10403:35;10387:111;10384:246;;;10540:8;10534:4;10530:19;10521:28;;10575:3;10568:5;10565:14;10562:40;;;10582:18;;:::i;:::-;10562:40;10615:5;;10384:246;10655:42;10693:3;10683:8;10677:4;10674:1;10655:42;:::i;:::-;10640:57;;;;10729:4;10724:3;10720:14;10713:5;10710:25;10707:51;;;10738:18;;:::i;:::-;10707:51;10787:4;10780:5;10776:16;10767:25;;9725:1073;;;;;;:::o;10804:285::-;10864:5;10888:23;10906:4;10888:23;:::i;:::-;10880:31;;10932:27;10950:8;10932:27;:::i;:::-;10920:39;;10978:104;11015:66;11005:8;10999:4;10978:104;:::i;:::-;10969:113;;10804:285;;;;:::o;11095:410::-;11135:7;11158:20;11176:1;11158:20;:::i;:::-;11153:25;;11192:20;11210:1;11192:20;:::i;:::-;11187:25;;11247:1;11244;11240:9;11269:30;11287:11;11269:30;:::i;:::-;11258:41;;11448:1;11439:7;11435:15;11432:1;11429:22;11409:1;11402:9;11382:83;11359:139;;11478:18;;:::i;:::-;11359:139;11143:362;11095:410;;;;:::o;11511:126::-;11548:7;11588:42;11581:5;11577:54;11566:65;;11511:126;;;:::o;11643:96::-;11680:7;11709:24;11727:5;11709:24;:::i;:::-;11698:35;;11643:96;;;:::o;11745:118::-;11832:24;11850:5;11832:24;:::i;:::-;11827:3;11820:37;11745:118;;:::o;11869:222::-;11962:4;12000:2;11989:9;11985:18;11977:26;;12013:71;12081:1;12070:9;12066:17;12057:6;12013:71;:::i;:::-;11869:222;;;;:::o;12097:191::-;12137:3;12156:20;12174:1;12156:20;:::i;:::-;12151:25;;12190:20;12208:1;12190:20;:::i;:::-;12185:25;;12233:1;12230;12226:9;12219:16;;12254:3;12251:1;12248:10;12245:36;;;12261:18;;:::i;:::-;12245:36;12097:191;;;;:::o;12294:118::-;12381:24;12399:5;12381:24;:::i;:::-;12376:3;12369:37;12294:118;;:::o;12418:442::-;12567:4;12605:2;12594:9;12590:18;12582:26;;12618:71;12686:1;12675:9;12671:17;12662:6;12618:71;:::i;:::-;12699:72;12767:2;12756:9;12752:18;12743:6;12699:72;:::i;:::-;12781;12849:2;12838:9;12834:18;12825:6;12781:72;:::i;:::-;12418:442;;;;;;:::o;12866:222::-;12959:4;12997:2;12986:9;12982:18;12974:26;;13010:71;13078:1;13067:9;13063:17;13054:6;13010:71;:::i;:::-;12866:222;;;;:::o;217:321:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_657": {
									"entryPoint": 1429,
									"id": 657,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_717": {
									"entryPoint": 1833,
									"id": 717,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_882": {
									"entryPoint": 1422,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_765": {
									"entryPoint": 1447,
									"id": 765,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_496": {
									"entryPoint": 1593,
									"id": 496,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_573": {
									"entryPoint": 2296,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_319": {
									"entryPoint": 1292,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_343": {
									"entryPoint": 771,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_278": {
									"entryPoint": 922,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_256": {
									"entryPoint": 860,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_449": {
									"entryPoint": 1135,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_404": {
									"entryPoint": 868,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_238": {
									"entryPoint": 627,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_247": {
									"entryPoint": 991,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_265": {
									"entryPoint": 805,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_375": {
									"entryPoint": 814,
									"id": 375,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_302": {
									"entryPoint": 1258,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7360:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6454:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:10:6"
															},
															"nodeType": "YulIf",
															"src": "6514:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6397:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6400:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6406:3:6",
														"type": ""
													}
												],
												"src": "6366:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6645:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6668:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6650:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6650:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6638:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6616:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6623:3:6",
														"type": ""
													}
												],
												"src": "6563:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6841:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6851:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6863:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6859:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6851:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6931:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6944:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6955:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6940:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6940:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6887:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6887:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6887:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7036:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7021:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6968:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6968:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6968:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7094:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7118:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7103:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7103:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7050:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7050:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6797:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6809:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6817:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6825:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6836:4:6",
														"type": ""
													}
												],
												"src": "6687:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7233:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7243:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7255:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7266:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7251:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7243:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7323:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7347:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7279:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7205:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7217:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7228:4:6",
														"type": ""
													}
												],
												"src": "7135:222:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610b9b565b60405180910390f35b6100e360048036038101906100de9190610c4c565b610303565b6040516100f09190610ca4565b60405180910390f35b610101610325565b60405161010e9190610ccc565b60405180910390f35b610131600480360381019061012c9190610ce5565b61032e565b60405161013e9190610ca4565b60405180910390f35b61014f61035c565b60405161015c9190610d50565b60405180910390f35b61017f600480360381019061017a9190610c4c565b610364565b60405161018c9190610ca4565b60405180910390f35b6101af60048036038101906101aa9190610d69565b61039a565b6040516101bc9190610ccc565b60405180910390f35b6101cd6103df565b6040516101da9190610b9b565b60405180910390f35b6101fd60048036038101906101f89190610c4c565b61046f565b60405161020a9190610ca4565b60405180910390f35b61022d60048036038101906102289190610c4c565b6104ea565b60405161023a9190610ca4565b60405180910390f35b61025d60048036038101906102589190610d94565b61050c565b60405161026a9190610ccc565b60405180910390f35b60606003805461028290610dff565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610dff565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d61058e565b905061031a818585610595565b600191505092915050565b5f600254905090565b5f8061033861058e565b90506103458582856105a7565b610350858585610639565b60019150509392505050565b5f6012905090565b5f8061036e61058e565b905061038f818585610380858961050c565b61038a9190610e5c565b610595565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610dff565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610dff565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f8061047961058e565b90505f610486828661050c565b9050838110156104d1578481856040517fa60f030c0000000000000000000000000000000000000000000000000000000081526004016104c893929190610e9e565b60405180910390fd5b6104de8286868403610595565b60019250505092915050565b5f806104f461058e565b9050610501818585610639565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6105a28383836001610729565b505050565b5f6105b2848461050c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106335781811015610624578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061b93929190610e9e565b60405180910390fd5b61063284848484035f610729565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106a09190610ed3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610719575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107109190610ed3565b60405180910390fd5b6107248383836108f8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610799575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107909190610ed3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610809575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108009190610ed3565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156108f2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108e99190610ccc565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610948578060025f82825461093c9190610e5c565b92505081905550610a16565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156109d1578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109c893929190610e9e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d578060025f8282540392505081905550610aa7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b049190610ccc565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b48578082015181840152602081019050610b2d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610b6d82610b11565b610b778185610b1b565b9350610b87818560208601610b2b565b610b9081610b53565b840191505092915050565b5f6020820190508181035f830152610bb38184610b63565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610be882610bbf565b9050919050565b610bf881610bde565b8114610c02575f80fd5b50565b5f81359050610c1381610bef565b92915050565b5f819050919050565b610c2b81610c19565b8114610c35575f80fd5b50565b5f81359050610c4681610c22565b92915050565b5f8060408385031215610c6257610c61610bbb565b5b5f610c6f85828601610c05565b9250506020610c8085828601610c38565b9150509250929050565b5f8115159050919050565b610c9e81610c8a565b82525050565b5f602082019050610cb75f830184610c95565b92915050565b610cc681610c19565b82525050565b5f602082019050610cdf5f830184610cbd565b92915050565b5f805f60608486031215610cfc57610cfb610bbb565b5b5f610d0986828701610c05565b9350506020610d1a86828701610c05565b9250506040610d2b86828701610c38565b9150509250925092565b5f60ff82169050919050565b610d4a81610d35565b82525050565b5f602082019050610d635f830184610d41565b92915050565b5f60208284031215610d7e57610d7d610bbb565b5b5f610d8b84828501610c05565b91505092915050565b5f8060408385031215610daa57610da9610bbb565b5b5f610db785828601610c05565b9250506020610dc885828601610c05565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e1657607f821691505b602082108103610e2957610e28610dd2565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6682610c19565b9150610e7183610c19565b9250828201905080821115610e8957610e88610e2f565b5b92915050565b610e9881610bde565b82525050565b5f606082019050610eb15f830186610e8f565b610ebe6020830185610cbd565b610ecb6040830184610cbd565b949350505050565b5f602082019050610ee65f830184610e8f565b9291505056fea26469706673582212206d7695fb964fcc22a6c8daf70a0bc95e4e222dbb82f4ff3b7ed0a970455f6ee964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x50C JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xDFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x479 PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x486 DUP3 DUP7 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4F4 PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH2 0x501 DUP2 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B2 DUP5 DUP5 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x633 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x729 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x719 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x724 DUP4 DUP4 DUP4 PUSH2 0x8F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x799 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x809 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8F2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x948 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x93C SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA16 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9D1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAA7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB48 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB2D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB6D DUP3 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0xB77 DUP2 DUP6 PUSH2 0xB1B JUMP JUMPDEST SWAP4 POP PUSH2 0xB87 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB90 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBB3 DUP2 DUP5 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBE8 DUP3 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP2 EQ PUSH2 0xC02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC13 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP2 EQ PUSH2 0xC35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC46 DUP2 PUSH2 0xC22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC62 JUMPI PUSH2 0xC61 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC6F DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC80 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB7 PUSH0 DUP4 ADD DUP5 PUSH2 0xC95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDF PUSH0 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD09 DUP7 DUP3 DUP8 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD1A DUP7 DUP3 DUP8 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD2B DUP7 DUP3 DUP8 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4A DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD63 PUSH0 DUP4 ADD DUP5 PUSH2 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD8B DUP5 DUP3 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xDA9 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB7 DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE16 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE66 DUP3 PUSH2 0xC19 JUMP JUMPDEST SWAP2 POP PUSH2 0xE71 DUP4 PUSH2 0xC19 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE89 JUMPI PUSH2 0xE88 PUSH2 0xE2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH0 DUP4 ADD DUP7 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0xEBE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xECB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x7695FB964FCC22A6C8DAF70A0BC9 0x5E 0x4E 0x22 0x2D 0xBB DUP3 DELEGATECALL SELFDESTRUCT EXTCODESIZE PUSH31 0xD0A970455F6EE964736F6C6343000814003300000000000000000000000000 ",
							"sourceMap": "217:321:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4671:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3522:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5417:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6056:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3677:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2654:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6959:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3988:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4224:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2452:89;2497:13;2529:5;2522:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:89;:::o;4671:186::-;4744:4;4760:13;4776:12;:10;:12::i;:::-;4760:28;;4798:31;4807:5;4814:7;4823:5;4798:8;:31::i;:::-;4846:4;4839:11;;;4671:186;;;;:::o;3522:97::-;3574:7;3600:12;;3593:19;;3522:97;:::o;5417:244::-;5504:4;5520:15;5538:12;:10;:12::i;:::-;5520:30;;5560:37;5576:4;5582:7;5591:5;5560:15;:37::i;:::-;5607:26;5617:4;5623:2;5627:5;5607:9;:26::i;:::-;5650:4;5643:11;;;5417:244;;;;;:::o;3380:82::-;3429:5;3453:2;3446:9;;3380:82;:::o;6056:234::-;6144:4;6160:13;6176:12;:10;:12::i;:::-;6160:28;;6198:64;6207:5;6214:7;6251:10;6223:25;6233:5;6240:7;6223:9;:25::i;:::-;:38;;;;:::i;:::-;6198:8;:64::i;:::-;6279:4;6272:11;;;6056:234;;;;:::o;3677:116::-;3742:7;3768:9;:18;3778:7;3768:18;;;;;;;;;;;;;;;;3761:25;;3677:116;;;:::o;2654:93::-;2701:13;2733:7;2726:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2654:93;:::o;6959:493::-;7054:4;7070:13;7086:12;:10;:12::i;:::-;7070:28;;7108:24;7135:25;7145:5;7152:7;7135:9;:25::i;:::-;7108:52;;7193:17;7174:16;:36;7170:148;;;7262:7;7271:16;7289:17;7233:74;;;;;;;;;;;;;:::i;:::-;;;;;;;;7170:148;7351:62;7360:5;7367:7;7395:17;7376:16;:36;7351:8;:62::i;:::-;7441:4;7434:11;;;;6959:493;;;;:::o;3988:178::-;4057:4;4073:13;4089:12;:10;:12::i;:::-;4073:28;;4111:27;4121:5;4128:2;4132:5;4111:9;:27::i;:::-;4155:4;4148:11;;;3988:178;;;;:::o;4224:140::-;4304:7;4330:11;:18;4342:5;4330:18;;;;;;;;;;;;;;;:27;4349:7;4330:27;;;;;;;;;;;;;;;;4323:34;;4224:140;;;;:::o;641:96:5:-;694:7;720:10;713:17;;641:96;:::o;11044:136:2:-;11136:37;11145:5;11152:7;11161:5;11168:4;11136:8;:37::i;:::-;11044:136;;;:::o;12739:477::-;12838:24;12865:25;12875:5;12882:7;12865:9;:25::i;:::-;12838:52;;12924:17;12904:16;:37;12900:310;;12980:5;12961:16;:24;12957:130;;;13039:7;13048:16;13066:5;13012:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12957:130;13128:57;13137:5;13144:7;13172:5;13153:16;:24;13179:5;13128:8;:57::i;:::-;12900:310;12828:388;12739:477;;;:::o;7825:300::-;7924:1;7908:18;;:4;:18;;;7904:86;;7976:1;7949:30;;;;;;;;;;;:::i;:::-;;;;;;;;7904:86;8017:1;8003:16;;:2;:16;;;7999:86;;8071:1;8042:32;;;;;;;;;;;:::i;:::-;;;;;;;;7999:86;8094:24;8102:4;8108:2;8112:5;8094:7;:24::i;:::-;7825:300;;;:::o;12028:432::-;12157:1;12140:19;;:5;:19;;;12136:89;;12211:1;12182:32;;;;;;;;;;;:::i;:::-;;;;;;;;12136:89;12257:1;12238:21;;:7;:21;;;12234:90;;12310:1;12282:31;;;;;;;;;;;:::i;:::-;;;;;;;;12234:90;12363:5;12333:11;:18;12345:5;12333:18;;;;;;;;;;;;;;;:27;12352:7;12333:27;;;;;;;;;;;;;;;:35;;;;12382:9;12378:76;;;12428:7;12412:31;;12421:5;12412:31;;;12437:5;12412:31;;;;;;:::i;:::-;;;;;;;;12378:76;12028:432;;;;:::o;8433:1107::-;8538:1;8522:18;;:4;:18;;;8518:540;;8674:5;8658:12;;:21;;;;;;;:::i;:::-;;;;;;;;8518:540;;;8710:19;8732:9;:15;8742:4;8732:15;;;;;;;;;;;;;;;;8710:37;;8779:5;8765:11;:19;8761:115;;;8836:4;8842:11;8855:5;8811:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8761:115;9028:5;9014:11;:19;8996:9;:15;9006:4;8996:15;;;;;;;;;;;;;;;:37;;;;8696:362;8518:540;9086:1;9072:16;;:2;:16;;;9068:425;;9251:5;9235:12;;:21;;;;;;;;;;;9068:425;;;9463:5;9446:9;:13;9456:2;9446:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;9068:425;9523:2;9508:25;;9517:4;9508:25;;;9527:5;9508:25;;;;;;:::i;:::-;;;;;;;;8433:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:118::-;6650:24;6668:5;6650:24;:::i;:::-;6645:3;6638:37;6563:118;;:::o;6687:442::-;6836:4;6874:2;6863:9;6859:18;6851:26;;6887:71;6955:1;6944:9;6940:17;6931:6;6887:71;:::i;:::-;6968:72;7036:2;7025:9;7021:18;7012:6;6968:72;:::i;:::-;7050;7118:2;7107:9;7103:18;7094:6;7050:72;:::i;:::-;6687:442;;;;;;:::o;7135:222::-;7228:4;7266:2;7255:9;7251:18;7243:26;;7279:71;7347:1;7336:9;7332:17;7323:6;7279:71;:::i;:::-;7135:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "774800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "427",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 250,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 250,
									"end": 535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 310,
									"end": 314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2348,
									"end": 2353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2345,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2340,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2373,
									"end": 2380,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2370,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2363,
									"end": 2380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2274,
									"end": 2387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2274,
									"end": 2387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 480,
									"end": 527,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 486,
									"end": 496,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 515,
									"end": 523,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 515,
									"end": 523,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 523,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 515,
									"end": 525,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 506,
									"end": 508,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 506,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 506,
									"end": 526,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 506,
									"end": 526,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 506,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 506,
									"end": 526,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 506,
									"end": 526,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 506,
									"end": 526,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 498,
									"end": 503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4E20"
								},
								{
									"begin": 498,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 498,
									"end": 526,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 498,
									"end": 526,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 498,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 498,
									"end": 526,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 498,
									"end": 526,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 498,
									"end": 526,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 480,
									"end": 485,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 480,
									"end": 485,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 480,
									"end": 485,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 480,
									"end": 527,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 480,
									"end": 527,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 480,
									"end": 527,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 480,
									"end": 527,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 480,
									"end": 527,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3380,
									"end": 3462,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3380,
									"end": 3462,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3434,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3453,
									"end": 3455,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3446,
									"end": 3455,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3446,
									"end": 3455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3380,
									"end": 3462,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3380,
									"end": 3462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9972,
									"end": 9973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9953,
									"end": 9960,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10026,
									"end": 10027,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 9997,
									"end": 10029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 10065,
									"end": 10066,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10069,
									"end": 10076,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10078,
									"end": 10083,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10056,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 10049,
									"end": 10056,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10049,
									"end": 10056,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8538,
									"end": 8539,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8522,
									"end": 8526,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8674,
									"end": 8679,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8670,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8658,
									"end": 8670,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8658,
									"end": 8679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8710,
									"end": 8729,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8732,
									"end": 8741,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8742,
									"end": 8746,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8710,
									"end": 8747,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8710,
									"end": 8747,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8779,
									"end": 8784,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8765,
									"end": 8776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8765,
									"end": 8784,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8836,
									"end": 8840,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8842,
									"end": 8853,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8855,
									"end": 8860,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 8811,
									"end": 8861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9028,
									"end": 9033,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9014,
									"end": 9025,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9014,
									"end": 9033,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9006,
									"end": 9010,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8696,
									"end": 9058,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9086,
									"end": 9087,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9072,
									"end": 9074,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9251,
									"end": 9256,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9247,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 9235,
									"end": 9247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9463,
									"end": 9468,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9456,
									"end": 9458,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9523,
									"end": 9525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9517,
									"end": 9521,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9527,
									"end": 9532,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 9508,
									"end": 9533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8757,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 8577,
									"end": 8757,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8625,
									"end": 8702,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8622,
									"end": 8623,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8615,
									"end": 8703,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8722,
									"end": 8726,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 8719,
									"end": 8720,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 8712,
									"end": 8727,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8746,
									"end": 8750,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 8743,
									"end": 8744,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8736,
									"end": 8751,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8865,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 8763,
									"end": 8865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8813,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8852,
									"end": 8857,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8849,
									"end": 8850,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8845,
									"end": 8858,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 8824,
									"end": 8858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8824,
									"end": 8858,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8865,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8932,
									"end": 8937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8939,
									"end": 8943,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 8963,
									"end": 8969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8954,
									"end": 8969,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8954,
									"end": 8969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8987,
									"end": 8992,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8978,
									"end": 8992,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8978,
									"end": 8992,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "tag",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9022,
									"end": 9023,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9012,
									"end": 9020,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9009,
									"end": 9024,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9117,
									"end": 9121,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9112,
									"end": 9115,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9108,
									"end": 9122,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 9102,
									"end": 9106,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9099,
									"end": 9123,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9096,
									"end": 9146,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9096,
									"end": 9146,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9096,
									"end": 9146,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9126,
									"end": 9144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9126,
									"end": 9144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9126,
									"end": 9144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9126,
									"end": 9144,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9126,
									"end": 9144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9096,
									"end": 9146,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9096,
									"end": 9146,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9176,
									"end": 9177,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9166,
									"end": 9174,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9162,
									"end": 9178,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9159,
									"end": 9610,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9159,
									"end": 9610,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9159,
									"end": 9610,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9591,
									"end": 9595,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9584,
									"end": 9589,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9580,
									"end": 9596,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9571,
									"end": 9596,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9571,
									"end": 9596,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9159,
									"end": 9610,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9159,
									"end": 9610,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9641,
									"end": 9645,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9635,
									"end": 9639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9631,
									"end": 9646,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9623,
									"end": 9646,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9623,
									"end": 9646,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9671,
									"end": 9703,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9694,
									"end": 9702,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9671,
									"end": 9703,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 9671,
									"end": 9703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9671,
									"end": 9703,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9671,
									"end": 9703,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9659,
									"end": 9703,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9659,
									"end": 9703,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9001,
									"end": 9713,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8871,
									"end": 9719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9779,
									"end": 9784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9970,
									"end": 9978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9960,
									"end": 10000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9960,
									"end": 10000,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9991,
									"end": 9992,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9982,
									"end": 9992,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9982,
									"end": 9992,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9993,
									"end": 9998,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 9993,
									"end": 9998,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9960,
									"end": 10000,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9960,
									"end": 10000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10019,
									"end": 10023,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10009,
									"end": 10045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 10009,
									"end": 10045,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10036,
									"end": 10037,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10027,
									"end": 10037,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10027,
									"end": 10037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10038,
									"end": 10043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10038,
									"end": 10043,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10009,
									"end": 10045,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 10009,
									"end": 10045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10105,
									"end": 10109,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10153,
									"end": 10154,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10148,
									"end": 10175,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10148,
									"end": 10175,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 10148,
									"end": 10175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 10148,
									"end": 10175,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10189,
									"end": 10190,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 10184,
									"end": 10375,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10184,
									"end": 10375,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 10184,
									"end": 10375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10184,
									"end": 10375,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10098,
									"end": 10375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10098,
									"end": 10375,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10148,
									"end": 10175,
									"name": "tag",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 10148,
									"end": 10175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10167,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10157,
									"end": 10167,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10157,
									"end": 10167,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10168,
									"end": 10173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10168,
									"end": 10173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10168,
									"end": 10173,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10184,
									"end": 10375,
									"name": "tag",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10184,
									"end": 10375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10229,
									"end": 10232,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 10219,
									"end": 10227,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10216,
									"end": 10233,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10213,
									"end": 10256,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10213,
									"end": 10256,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10213,
									"end": 10256,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10236,
									"end": 10254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 10236,
									"end": 10254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10236,
									"end": 10254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10236,
									"end": 10254,
									"name": "tag",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 10236,
									"end": 10254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10213,
									"end": 10256,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10213,
									"end": 10256,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10285,
									"end": 10293,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10282,
									"end": 10283,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 10278,
									"end": 10294,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 10269,
									"end": 10294,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10269,
									"end": 10294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10320,
									"end": 10323,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10313,
									"end": 10318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10310,
									"end": 10324,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10307,
									"end": 10347,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10307,
									"end": 10347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10307,
									"end": 10347,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10327,
									"end": 10345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10327,
									"end": 10345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10327,
									"end": 10345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10327,
									"end": 10345,
									"name": "tag",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10327,
									"end": 10345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10307,
									"end": 10347,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10307,
									"end": 10347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10360,
									"end": 10365,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10360,
									"end": 10365,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10360,
									"end": 10365,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10098,
									"end": 10375,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10098,
									"end": 10375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10098,
									"end": 10375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10484,
									"end": 10486,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10474,
									"end": 10482,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10471,
									"end": 10487,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 10465,
									"end": 10468,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 10459,
									"end": 10463,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10456,
									"end": 10469,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 10452,
									"end": 10488,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10434,
									"end": 10436,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 10424,
									"end": 10432,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10421,
									"end": 10437,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 10416,
									"end": 10418,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 10410,
									"end": 10414,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10407,
									"end": 10419,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 10403,
									"end": 10438,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10387,
									"end": 10498,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 10384,
									"end": 10630,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10384,
									"end": 10630,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10384,
									"end": 10630,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10540,
									"end": 10548,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10534,
									"end": 10538,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10530,
									"end": 10549,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 10521,
									"end": 10549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10521,
									"end": 10549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10575,
									"end": 10578,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10568,
									"end": 10573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 10579,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10562,
									"end": 10602,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10562,
									"end": 10602,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10562,
									"end": 10602,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10582,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10582,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10582,
									"end": 10600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10582,
									"end": 10600,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10582,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10562,
									"end": 10602,
									"name": "tag",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10562,
									"end": 10602,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10615,
									"end": 10620,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10615,
									"end": 10620,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10384,
									"end": 10630,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10384,
									"end": 10630,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10655,
									"end": 10697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "204"
								},
								{
									"begin": 10693,
									"end": 10696,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10683,
									"end": 10691,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10677,
									"end": 10681,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10674,
									"end": 10675,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10655,
									"end": 10697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 10655,
									"end": 10697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10655,
									"end": 10697,
									"name": "tag",
									"source": 6,
									"value": "204"
								},
								{
									"begin": 10655,
									"end": 10697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10640,
									"end": 10697,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10640,
									"end": 10697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10640,
									"end": 10697,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10640,
									"end": 10697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10729,
									"end": 10733,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10724,
									"end": 10727,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10720,
									"end": 10734,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 10713,
									"end": 10718,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10710,
									"end": 10735,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10707,
									"end": 10758,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10707,
									"end": 10758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 10707,
									"end": 10758,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10738,
									"end": 10756,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "206"
								},
								{
									"begin": 10738,
									"end": 10756,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10738,
									"end": 10756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10738,
									"end": 10756,
									"name": "tag",
									"source": 6,
									"value": "206"
								},
								{
									"begin": 10738,
									"end": 10756,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10707,
									"end": 10758,
									"name": "tag",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 10707,
									"end": 10758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10787,
									"end": 10791,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10780,
									"end": 10785,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10776,
									"end": 10792,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 10767,
									"end": 10792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10767,
									"end": 10792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9725,
									"end": 10798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10804,
									"end": 11089,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 10804,
									"end": 11089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10864,
									"end": 10869,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10888,
									"end": 10911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "208"
								},
								{
									"begin": 10906,
									"end": 10910,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10888,
									"end": 10911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 10888,
									"end": 10911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10888,
									"end": 10911,
									"name": "tag",
									"source": 6,
									"value": "208"
								},
								{
									"begin": 10888,
									"end": 10911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10880,
									"end": 10911,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10880,
									"end": 10911,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10932,
									"end": 10959,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "209"
								},
								{
									"begin": 10950,
									"end": 10958,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10932,
									"end": 10959,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 10932,
									"end": 10959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10932,
									"end": 10959,
									"name": "tag",
									"source": 6,
									"value": "209"
								},
								{
									"begin": 10932,
									"end": 10959,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10920,
									"end": 10959,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10920,
									"end": 10959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10978,
									"end": 11082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11015,
									"end": 11081,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11005,
									"end": 11013,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10999,
									"end": 11003,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10978,
									"end": 11082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 10978,
									"end": 11082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10978,
									"end": 11082,
									"name": "tag",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 10978,
									"end": 11082,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10969,
									"end": 11082,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10969,
									"end": 11082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10804,
									"end": 11089,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10804,
									"end": 11089,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10804,
									"end": 11089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10804,
									"end": 11089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10804,
									"end": 11089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11095,
									"end": 11505,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 11095,
									"end": 11505,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11135,
									"end": 11142,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11158,
									"end": 11178,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "212"
								},
								{
									"begin": 11176,
									"end": 11177,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11158,
									"end": 11178,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 11158,
									"end": 11178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11158,
									"end": 11178,
									"name": "tag",
									"source": 6,
									"value": "212"
								},
								{
									"begin": 11158,
									"end": 11178,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11153,
									"end": 11178,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11153,
									"end": 11178,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11192,
									"end": 11212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "213"
								},
								{
									"begin": 11210,
									"end": 11211,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11192,
									"end": 11212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 11192,
									"end": 11212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11192,
									"end": 11212,
									"name": "tag",
									"source": 6,
									"value": "213"
								},
								{
									"begin": 11192,
									"end": 11212,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11187,
									"end": 11212,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11187,
									"end": 11212,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11247,
									"end": 11248,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11244,
									"end": 11245,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11240,
									"end": 11249,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 11269,
									"end": 11299,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "214"
								},
								{
									"begin": 11287,
									"end": 11298,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11269,
									"end": 11299,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 11269,
									"end": 11299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11269,
									"end": 11299,
									"name": "tag",
									"source": 6,
									"value": "214"
								},
								{
									"begin": 11269,
									"end": 11299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11258,
									"end": 11299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11258,
									"end": 11299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11448,
									"end": 11449,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11439,
									"end": 11446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11435,
									"end": 11450,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 11432,
									"end": 11433,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11429,
									"end": 11451,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 11409,
									"end": 11410,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11402,
									"end": 11411,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11382,
									"end": 11465,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 11359,
									"end": 11498,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "215"
								},
								{
									"begin": 11359,
									"end": 11498,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11478,
									"end": 11496,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "216"
								},
								{
									"begin": 11478,
									"end": 11496,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 11478,
									"end": 11496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11478,
									"end": 11496,
									"name": "tag",
									"source": 6,
									"value": "216"
								},
								{
									"begin": 11478,
									"end": 11496,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11359,
									"end": 11498,
									"name": "tag",
									"source": 6,
									"value": "215"
								},
								{
									"begin": 11359,
									"end": 11498,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11143,
									"end": 11505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11095,
									"end": 11505,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11095,
									"end": 11505,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11095,
									"end": 11505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11095,
									"end": 11505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11095,
									"end": 11505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11511,
									"end": 11637,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 11511,
									"end": 11637,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11548,
									"end": 11555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11588,
									"end": 11630,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11581,
									"end": 11586,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11577,
									"end": 11631,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 11566,
									"end": 11631,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11566,
									"end": 11631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11511,
									"end": 11637,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11511,
									"end": 11637,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11511,
									"end": 11637,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11511,
									"end": 11637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11643,
									"end": 11739,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 11643,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11680,
									"end": 11687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11709,
									"end": 11733,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "219"
								},
								{
									"begin": 11727,
									"end": 11732,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11709,
									"end": 11733,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 11709,
									"end": 11733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11709,
									"end": 11733,
									"name": "tag",
									"source": 6,
									"value": "219"
								},
								{
									"begin": 11709,
									"end": 11733,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11698,
									"end": 11733,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11698,
									"end": 11733,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11643,
									"end": 11739,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11643,
									"end": 11739,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11643,
									"end": 11739,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11643,
									"end": 11739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11745,
									"end": 11863,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 11745,
									"end": 11863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11832,
									"end": 11856,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "221"
								},
								{
									"begin": 11850,
									"end": 11855,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11832,
									"end": 11856,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 11832,
									"end": 11856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11832,
									"end": 11856,
									"name": "tag",
									"source": 6,
									"value": "221"
								},
								{
									"begin": 11832,
									"end": 11856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11827,
									"end": 11830,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11820,
									"end": 11857,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 11745,
									"end": 11863,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11745,
									"end": 11863,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11745,
									"end": 11863,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11869,
									"end": 12091,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 11869,
									"end": 12091,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11962,
									"end": 11966,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12000,
									"end": 12002,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11989,
									"end": 11998,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11985,
									"end": 12003,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11977,
									"end": 12003,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11977,
									"end": 12003,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12013,
									"end": 12084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "223"
								},
								{
									"begin": 12081,
									"end": 12082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12070,
									"end": 12079,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12066,
									"end": 12083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12057,
									"end": 12063,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12013,
									"end": 12084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 12013,
									"end": 12084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12013,
									"end": 12084,
									"name": "tag",
									"source": 6,
									"value": "223"
								},
								{
									"begin": 12013,
									"end": 12084,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11869,
									"end": 12091,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11869,
									"end": 12091,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11869,
									"end": 12091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11869,
									"end": 12091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11869,
									"end": 12091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12097,
									"end": 12288,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 12097,
									"end": 12288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12137,
									"end": 12140,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12156,
									"end": 12176,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "225"
								},
								{
									"begin": 12174,
									"end": 12175,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12156,
									"end": 12176,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 12156,
									"end": 12176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12156,
									"end": 12176,
									"name": "tag",
									"source": 6,
									"value": "225"
								},
								{
									"begin": 12156,
									"end": 12176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12151,
									"end": 12176,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12151,
									"end": 12176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12190,
									"end": 12210,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "226"
								},
								{
									"begin": 12208,
									"end": 12209,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12190,
									"end": 12210,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 12190,
									"end": 12210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12190,
									"end": 12210,
									"name": "tag",
									"source": 6,
									"value": "226"
								},
								{
									"begin": 12190,
									"end": 12210,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12185,
									"end": 12210,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12185,
									"end": 12210,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12233,
									"end": 12234,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12230,
									"end": 12231,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12226,
									"end": 12235,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12219,
									"end": 12235,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12219,
									"end": 12235,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12254,
									"end": 12257,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 12251,
									"end": 12252,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12248,
									"end": 12258,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 12245,
									"end": 12281,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 12245,
									"end": 12281,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "227"
								},
								{
									"begin": 12245,
									"end": 12281,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 12261,
									"end": 12279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "228"
								},
								{
									"begin": 12261,
									"end": 12279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 12261,
									"end": 12279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12261,
									"end": 12279,
									"name": "tag",
									"source": 6,
									"value": "228"
								},
								{
									"begin": 12261,
									"end": 12279,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12245,
									"end": 12281,
									"name": "tag",
									"source": 6,
									"value": "227"
								},
								{
									"begin": 12245,
									"end": 12281,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12097,
									"end": 12288,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12097,
									"end": 12288,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12097,
									"end": 12288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12097,
									"end": 12288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12097,
									"end": 12288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12294,
									"end": 12412,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 12294,
									"end": 12412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12381,
									"end": 12405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "230"
								},
								{
									"begin": 12399,
									"end": 12404,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 12381,
									"end": 12405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 12381,
									"end": 12405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12381,
									"end": 12405,
									"name": "tag",
									"source": 6,
									"value": "230"
								},
								{
									"begin": 12381,
									"end": 12405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12376,
									"end": 12379,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12369,
									"end": 12406,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 12294,
									"end": 12412,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12294,
									"end": 12412,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12294,
									"end": 12412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12567,
									"end": 12571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12605,
									"end": 12607,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 12594,
									"end": 12603,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12590,
									"end": 12608,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12582,
									"end": 12608,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12582,
									"end": 12608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12618,
									"end": 12689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "232"
								},
								{
									"begin": 12686,
									"end": 12687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12675,
									"end": 12684,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12671,
									"end": 12688,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12662,
									"end": 12668,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 12618,
									"end": 12689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 12618,
									"end": 12689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12618,
									"end": 12689,
									"name": "tag",
									"source": 6,
									"value": "232"
								},
								{
									"begin": 12618,
									"end": 12689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12699,
									"end": 12771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "233"
								},
								{
									"begin": 12767,
									"end": 12769,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 12756,
									"end": 12765,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12752,
									"end": 12770,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12743,
									"end": 12749,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 12699,
									"end": 12771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 12699,
									"end": 12771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12699,
									"end": 12771,
									"name": "tag",
									"source": 6,
									"value": "233"
								},
								{
									"begin": 12699,
									"end": 12771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12781,
									"end": 12853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "234"
								},
								{
									"begin": 12849,
									"end": 12851,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 12838,
									"end": 12847,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12834,
									"end": 12852,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12825,
									"end": 12831,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12781,
									"end": 12853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 12781,
									"end": 12853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12781,
									"end": 12853,
									"name": "tag",
									"source": 6,
									"value": "234"
								},
								{
									"begin": 12781,
									"end": 12853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12418,
									"end": 12860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12866,
									"end": 13088,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 12866,
									"end": 13088,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12959,
									"end": 12963,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12997,
									"end": 12999,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 12986,
									"end": 12995,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12982,
									"end": 13000,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12974,
									"end": 13000,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12974,
									"end": 13000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13010,
									"end": 13081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "236"
								},
								{
									"begin": 13078,
									"end": 13079,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13067,
									"end": 13076,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13063,
									"end": 13080,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13054,
									"end": 13060,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 13010,
									"end": 13081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 13010,
									"end": 13081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13010,
									"end": 13081,
									"name": "tag",
									"source": 6,
									"value": "236"
								},
								{
									"begin": 13010,
									"end": 13081,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12866,
									"end": 13088,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12866,
									"end": 13088,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12866,
									"end": 13088,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12866,
									"end": 13088,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12866,
									"end": 13088,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 217,
									"end": 538,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 217,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 538,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d7695fb964fcc22a6c8daf70a0bc95e4e222dbb82f4ff3b7ed0a970455f6ee964736f6c63430008140033",
									".code": [
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2452,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2452,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3522,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3522,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3380,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3380,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2654,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2654,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2529,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2522,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2522,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 4788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4807,
											"end": 4812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4821,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4828,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4798,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4829,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4798,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3593,
											"end": 3612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3593,
											"end": 3612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5538,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5538,
											"end": 5550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5576,
											"end": 5580,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5560,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5560,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5607,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5654,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5643,
											"end": 5654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6144,
											"end": 6148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6176,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6176,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6160,
											"end": 6188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6160,
											"end": 6188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6207,
											"end": 6212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6233,
											"end": 6238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6247,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6223,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6223,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6198,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6198,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6279,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6272,
											"end": 6283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3742,
											"end": 3749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2726,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2726,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7086,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7086,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7070,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7070,
											"end": 7098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7145,
											"end": 7150,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7159,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7135,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7160,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7135,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7210,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7174,
											"end": 7210,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7269,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7289,
											"end": 7306,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "A60F030C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7233,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7360,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7374,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7395,
											"end": 7412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7376,
											"end": 7392,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7376,
											"end": 7412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7351,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7351,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4089,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4089,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4111,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4138,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4111,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4155,
											"end": 4159,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4304,
											"end": 4311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 737,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 694,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 713,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11180,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11044,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11145,
											"end": 11150,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11152,
											"end": 11159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11161,
											"end": 11166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11172,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11136,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 11136,
											"end": 11173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11136,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11044,
											"end": 11180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11044,
											"end": 11180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11044,
											"end": 11180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11044,
											"end": 11180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12739,
											"end": 13216,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 12739,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12865,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 12875,
											"end": 12880,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12889,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 12865,
											"end": 12890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12890,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 12865,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12924,
											"end": 12941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12904,
											"end": 12920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12904,
											"end": 12941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12900,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 12900,
											"end": 13210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12980,
											"end": 12985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12961,
											"end": 12977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12961,
											"end": 12985,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12957,
											"end": 13087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12957,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12957,
											"end": 13087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13039,
											"end": 13046,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13066,
											"end": 13071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 13012,
											"end": 13072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13072,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12957,
											"end": 13087,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12957,
											"end": 13087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13128,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 13137,
											"end": 13142,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13144,
											"end": 13151,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13172,
											"end": 13177,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13153,
											"end": 13169,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13153,
											"end": 13177,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13179,
											"end": 13184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13128,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 13128,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13128,
											"end": 13185,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 13128,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12900,
											"end": 13210,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 12900,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12828,
											"end": 13216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12739,
											"end": 13216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12739,
											"end": 13216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12739,
											"end": 13216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12739,
											"end": 13216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7949,
											"end": 7979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8071,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8042,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8108,
											"end": 8110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8094,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12028,
											"end": 12460,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 12028,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12140,
											"end": 12145,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12136,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 12136,
											"end": 12225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12182,
											"end": 12214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12182,
											"end": 12214,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12136,
											"end": 12225,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 12136,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12259,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12238,
											"end": 12259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12238,
											"end": 12245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12238,
											"end": 12259,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12238,
											"end": 12259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12238,
											"end": 12259,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12234,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 12234,
											"end": 12324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12310,
											"end": 12311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12282,
											"end": 12313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12234,
											"end": 12324,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 12234,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12363,
											"end": 12368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12344,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12350,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12352,
											"end": 12359,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12360,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12382,
											"end": 12391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12454,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 12378,
											"end": 12454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12428,
											"end": 12435,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12421,
											"end": 12426,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12437,
											"end": 12442,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 12412,
											"end": 12443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12443,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12454,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 12378,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12028,
											"end": 12460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12028,
											"end": 12460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12028,
											"end": 12460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12028,
											"end": 12460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12028,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 8679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8670,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8658,
											"end": 8670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8658,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8742,
											"end": 8746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8784,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8855,
											"end": 8860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 8811,
											"end": 8861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9028,
											"end": 9033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8696,
											"end": 9058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9251,
											"end": 9256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9235,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9463,
											"end": 9468,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9458,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9527,
											"end": 9532,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 9508,
											"end": 9533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6668,
											"end": 6673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6650,
											"end": 6674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6863,
											"end": 6872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6955,
											"end": 6956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6953,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6937,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6887,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6968,
											"end": 7040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7050,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7268,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7347,
											"end": 7348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7332,
											"end": 7349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7279,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/testtoken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/testtoken.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/testtoken.sol\":{\"keccak256\":\"0xbce1093b1f05e78baca753d9958b21e77e20e1d9c7166d60e678a99ebe2ac860\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcca853aa241122e5aebab4b0d9b1d8aa3ef79a98f7683fb127f00088d96a1ee\",\"dweb:/ipfs/QmTnzJgVo1VCkjHqhwRw4cg4BgRLsGUAhrvNEuYK7H5c6b\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2d0e76e01de5051685b7e7461b49cad00cbed1e742632392d39bc39fecf17df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eff1c948870cab8ea83848a03de4c53fcc0b36342c73c16f6bbee6bd14ffa661\",\"dweb:/ipfs/QmZTLUVM2LoCjM1ZpHndW5eGGiNYJvBempTe7FDrCFvrGu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x11978b1a63c34da7be9478e3ef9b010c77e3a6a3907271a9fbcaecea5e690c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230dcb6f06c05bdd45777779db201a6bfdb491c0c78847c7200a54162f08f557\",\"dweb:/ipfs/QmbsVtCMwG4cEupL38UyBcZXgJ7SipqYZMgrir96aXJm5S\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 191,
								"contract": "contracts/testtoken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 197,
								"contract": "contracts/testtoken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 199,
								"contract": "contracts/testtoken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 201,
								"contract": "contracts/testtoken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "contracts/testtoken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2d0e76e01de5051685b7e7461b49cad00cbed1e742632392d39bc39fecf17df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eff1c948870cab8ea83848a03de4c53fcc0b36342c73c16f6bbee6bd14ffa661\",\"dweb:/ipfs/QmZTLUVM2LoCjM1ZpHndW5eGGiNYJvBempTe7FDrCFvrGu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x11978b1a63c34da7be9478e3ef9b010c77e3a6a3907271a9fbcaecea5e690c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230dcb6f06c05bdd45777779db201a6bfdb491c0c78847c7200a54162f08f557\",\"dweb:/ipfs/QmbsVtCMwG4cEupL38UyBcZXgJ7SipqYZMgrir96aXJm5S\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 191,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 197,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 199,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 201,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x11978b1a63c34da7be9478e3ef9b010c77e3a6a3907271a9fbcaecea5e690c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230dcb6f06c05bdd45777779db201a6bfdb491c0c78847c7200a54162f08f557\",\"dweb:/ipfs/QmbsVtCMwG4cEupL38UyBcZXgJ7SipqYZMgrir96aXJm5S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/testtoken.sol": {
				"ast": {
					"absolutePath": "contracts/testtoken.sol",
					"exportedSymbols": {
						"Context": [
							892
						],
						"ERC20": [
							766
						],
						"IERC20": [
							844
						],
						"IERC20Errors": [
							73
						],
						"IERC20Metadata": [
							870
						],
						"MyToken": [
							31
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 767,
							"src": "61:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"237:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 766,
										"src": "237:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "237:5:0"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31,
								766,
								73,
								870,
								844,
								892
							],
							"name": "MyToken",
							"nameLocation": "226:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "324:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 16,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "486:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "490:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "486:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3230303030",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000_by_1",
																	"typeString": "int_const 20000"
																},
																"value": "20000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "506:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 22,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 256,
																				"src": "515:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 23,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "515:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "510:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 20,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "510:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "510:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "506:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "498:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 15,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "480:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "480:47:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 11,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 12,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "316:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ERC20",
												"nameLocations": [
													"304:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 766,
												"src": "304:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "304:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "276:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "262:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "296:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "282:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:42:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 31,
									"src": "250:285:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 32,
							"src": "217:321:0",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72,
								212
							],
							"usedEvents": [
								778,
								787
							]
						}
					],
					"src": "33:509:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "58:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "208:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "227:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "547:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "580:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "572:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "596:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "588:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "613:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "605:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:49:1"
									},
									"src": "541:80:1"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "627:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "790:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "817:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"src": "784:41:1"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "831:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1001:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1030:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1022:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:18:1"
									},
									"src": "995:45:1"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1046:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1402:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1429:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1454:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1446:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1473:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1465:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:52:1"
									},
									"src": "1396:85:1"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1487:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1672:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1701:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1693:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:18:1"
									},
									"src": "1666:45:1"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1717:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1923:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1951:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1943:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:17:1"
									},
									"src": "1917:43:1"
								}
							],
							"scope": 169,
							"src": "198:1764:1",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "1964:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2116:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2136:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2366:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2393:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2385:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:15:1"
									},
									"src": "2360:40:1"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2406:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2549:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:17:1"
									},
									"src": "2543:46:1"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2595:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2895:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2924:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2916:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2949:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:48:1"
									},
									"src": "2889:75:1"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "2970:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3133:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3161:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3153:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:16:1"
									},
									"src": "3127:42:1"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3175:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3345:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3375:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3367:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:18:1"
									},
									"src": "3339:46:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3391:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3649:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3684:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3676:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3694:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:35:1"
									},
									"src": "3643:68:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3717:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3902:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3932:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3924:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:18:1"
									},
									"src": "3896:46:1"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3948:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4156:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4186:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4178:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:18:1"
									},
									"src": "4150:46:1"
								}
							],
							"scope": 169,
							"src": "2106:2092:1",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4200:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4354:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4375:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4747:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4782:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4774:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4798:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4790:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4831:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4823:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:66:1"
									},
									"src": "4741:99:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4846:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5009:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5038:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5030:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5030:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:16:1"
									},
									"src": "5003:43:1"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5052:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5222:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5253:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5245:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:18:1"
									},
									"src": "5216:47:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5269:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5536:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5573:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5565:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5591:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5583:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:33:1"
									},
									"src": "5530:68:1"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5604:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5789:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5820:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5812:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5811:18:1"
									},
									"src": "5783:47:1"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5836:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6044:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6075:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6067:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:18:1"
									},
									"src": "6038:47:1"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6091:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6382:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6416:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6408:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6435:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6427:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6427:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:41:1"
									},
									"src": "6376:73:1"
								}
							],
							"scope": 169,
							"src": "4344:2107:1",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "32:6420:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							892
						],
						"ERC20": [
							766
						],
						"IERC20": [
							844
						],
						"IERC20Errors": [
							73
						],
						"IERC20Metadata": [
							870
						]
					},
					"id": 767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 845,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 871,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 870,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 893,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 892,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 169,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 73,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 180,
										"name": "Context",
										"nameLocations": [
											"1619:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 892,
										"src": "1619:7:2"
									},
									"id": 181,
									"nodeType": "InheritanceSpecifier",
									"src": "1619:7:2"
								},
								{
									"baseName": {
										"id": 182,
										"name": "IERC20",
										"nameLocations": [
											"1628:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "1628:6:2"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "1628:6:2"
								},
								{
									"baseName": {
										"id": 184,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1636:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "1636:14:2"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "1636:14:2"
								},
								{
									"baseName": {
										"id": 186,
										"name": "IERC20Errors",
										"nameLocations": [
											"1652:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "1652:12:2"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "1652:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 179,
								"nodeType": "StructuredDocumentation",
								"src": "348:1243:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 766,
							"linearizedBaseContracts": [
								766,
								73,
								870,
								844,
								892
							],
							"name": "ERC20",
							"nameLocation": "1610:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 191,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1715:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "1671:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 190,
										"keyName": "account",
										"keyNameLocation": "1687:7:2",
										"keyType": {
											"id": 188,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1679:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1671:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 189,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1698:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1803:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "1731:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 196,
										"keyName": "account",
										"keyNameLocation": "1747:7:2",
										"keyType": {
											"id": 192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1739:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1731:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 195,
											"keyName": "spender",
											"keyNameLocation": "1774:7:2",
											"keyType": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1766:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1758:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 194,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1785:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1837:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "1821:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1821:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1871:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "1856:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 200,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1856:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1897:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "1882:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1882:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1911:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "a60f030c",
									"id": 212,
									"name": "ERC20FailedDecreaseAllowance",
									"nameLocation": "1993:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "2047:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2039:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2073:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2065:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:70:2"
									},
									"src": "1987:105:2"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "2330:57:2",
										"statements": [
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 220,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2340:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 221,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2348:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2340:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2340:13:2"
											},
											{
												"expression": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 224,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 225,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2373:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2363:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2363:17:2"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2098:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2300:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2286:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2286:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2321:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2307:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2307:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:44:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:0:2"
									},
									"scope": 766,
									"src": "2274:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										857
									],
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2512:29:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "2529:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 234,
												"id": 236,
												"nodeType": "Return",
												"src": "2522:12:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2393:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2461:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:2"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2497:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2497:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:15:2"
									},
									"scope": 766,
									"src": "2452:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										863
									],
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "2716:31:2",
										"statements": [
											{
												"expression": {
													"id": 244,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 243,
												"id": 245,
												"nodeType": "Return",
												"src": "2726:14:2"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2547:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2663:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2701:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2701:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:15:2"
									},
									"scope": 766,
									"src": "2654:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										869
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3436:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3453:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 252,
												"id": 254,
												"nodeType": "Return",
												"src": "3446:9:2"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "2753:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3389:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3429:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 250,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3429:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:7:2"
									},
									"scope": 766,
									"src": "3380:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										793
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "3583:36:2",
										"statements": [
											{
												"expression": {
													"id": 262,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 199,
													"src": "3600:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "3593:19:2"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3468:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3531:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:2:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3574:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:9:2"
									},
									"scope": 766,
									"src": "3522:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3751:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 273,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3778:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3768:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "3761:25:2"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3625:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3686:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3704:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3696:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:17:2"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3742:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3741:9:2"
									},
									"scope": 766,
									"src": "3677:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										811
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4063:103:2",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4081:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4073:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4073:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4089:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4089:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4073:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4121:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4128:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4111:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4111:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4111:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4155:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4148:11:2"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3799:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3997:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4014:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4006:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4026:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4018:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:27:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4057:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4057:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4056:6:2"
									},
									"scope": 766,
									"src": "3988:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										821
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4313:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 312,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4330:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 314,
														"indexExpression": {
															"id": 313,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4342:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4330:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "4349:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4330:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 317,
												"nodeType": "Return",
												"src": "4323:34:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4172:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4233:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4258:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:32:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4304:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4303:9:2"
									},
									"scope": 766,
									"src": "4224:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										831
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "4750:107:2",
										"statements": [
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4768:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 342,
														"src": "4760:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 329,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4760:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 331,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4776:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4776:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4760:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4807:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "4814:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "4823:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															657,
															717
														],
														"referencedDeclaration": 657,
														"src": "4798:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "4798:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4846:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 328,
												"id": 341,
												"nodeType": "Return",
												"src": "4839:11:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4370:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4680:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4696:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4688:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4713:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4705:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:32:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4744:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4744:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4743:6:2"
									},
									"scope": 766,
									"src": "4671:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										843
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "5510:151:2",
										"statements": [
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5528:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "5520:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 355,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5520:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 357,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "5538:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5538:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5520:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5576:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "5582:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5591:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "5560:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5560:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "5560:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 367,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5617:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5623:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5627:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 366,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "5607:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5607:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "5607:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5650:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 354,
												"id": 373,
												"nodeType": "Return",
												"src": "5643:11:2"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "4863:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5426:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5447:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5439:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5461:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5453:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5438:41:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5504:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5504:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:6:2"
									},
									"scope": 766,
									"src": "5417:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "6150:140:2",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6168:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "6160:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 385,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6160:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 387,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "6176:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6176:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6160:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6207:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 394,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "6233:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 395,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "6240:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 393,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "6223:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6223:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 397,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6251:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6223:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															657,
															717
														],
														"referencedDeclaration": 657,
														"src": "6198:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6198:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "6198:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6279:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 384,
												"id": 402,
												"nodeType": "Return",
												"src": "6272:11:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "5667:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6065:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6091:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6083:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6108:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6100:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:37:2"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6144:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6144:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6143:6:2"
									},
									"scope": 766,
									"src": "6056:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7060:392:2",
										"statements": [
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7078:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "7070:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 414,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7070:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 416,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "7086:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7070:28:2"
											},
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7116:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "7108:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7108:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [
														{
															"id": 422,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7145:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7152:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 421,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7135:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7108:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "7174:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 427,
														"name": "requestedDecrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "7193:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7174:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 436,
												"nodeType": "IfStatement",
												"src": "7170:148:2",
												"trueBody": {
													"id": 435,
													"nodeType": "Block",
													"src": "7212:106:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 430,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "7262:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 431,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "7271:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 432,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "7289:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 429,
																	"name": "ERC20FailedDecreaseAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "7233:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) pure"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7233:74:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 434,
															"nodeType": "RevertStatement",
															"src": "7226:81:2"
														}
													]
												}
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "7327:97:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 438,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7360:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 439,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "7367:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "7376:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 441,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "7395:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7376:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 437,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	657,
																	717
																],
																"referencedDeclaration": 657,
																"src": "7351:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7351:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "7351:62:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 413,
												"id": 447,
												"nodeType": "Return",
												"src": "7434:11:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "6296:658:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `requestedDecrease`.\n NOTE: Although this function is designed to avoid double spending with {approval},\n it can still be frontrunned, preventing any attempt of allowance reduction."
									},
									"functionSelector": "a457c2d7",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6968:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6994:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "6986:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6986:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "7011:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7003:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6985:44:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7054:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7054:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7053:6:2"
									},
									"scope": 766,
									"src": "6959:493:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "7894:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "7908:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 460,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7908:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "7904:86:2",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "7928:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7976:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7968:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 466,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7968:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7968:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 465,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "7949:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7949:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "RevertStatement",
															"src": "7942:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 474,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "8003:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 475,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8003:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "IfStatement",
												"src": "7999:86:2",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "8021:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8071:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8063:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 481,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8063:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8063:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 480,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "8042:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 486,
															"nodeType": "RevertStatement",
															"src": "8035:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8102:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8108:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8112:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8094:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "8094:24:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "7458:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7834:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "7844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "7858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7878:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "7870:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7843:41:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7894:0:2"
									},
									"scope": 766,
									"src": "7825:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "8508:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8522:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8538:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8530:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 507,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8530:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8530:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8522:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "8696:362:2",
													"statements": [
														{
															"assignments": [
																518
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 518,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "8718:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 543,
																	"src": "8710:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8710:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 522,
															"initialValue": {
																"baseExpression": {
																	"id": 519,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "8732:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 521,
																"indexExpression": {
																	"id": 520,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "8742:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8732:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8710:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 523,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "8765:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 524,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "8779:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8765:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 533,
															"nodeType": "IfStatement",
															"src": "8761:115:2",
															"trueBody": {
																"id": 532,
																"nodeType": "Block",
																"src": "8786:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 527,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "8836:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 528,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 518,
																					"src": "8842:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 529,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 503,
																					"src": "8855:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 526,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 43,
																				"src": "8811:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8811:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 531,
																		"nodeType": "RevertStatement",
																		"src": "8804:57:2"
																	}
																]
															}
														},
														{
															"id": 542,
															"nodeType": "UncheckedBlock",
															"src": "8889:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 534,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "8996:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 536,
																			"indexExpression": {
																				"id": 535,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "9006:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8996:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 537,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "9014:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 538,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "9028:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9014:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8996:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 541,
																	"nodeType": "ExpressionStatement",
																	"src": "8996:37:2"
																}
															]
														}
													]
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "8518:540:2",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "8542:148:2",
													"statements": [
														{
															"expression": {
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 512,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "8658:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 513,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "8674:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8658:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "8658:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "9072:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9086:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 546,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9078:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9078:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9072:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 564,
													"nodeType": "Block",
													"src": "9287:206:2",
													"statements": [
														{
															"id": 563,
															"nodeType": "UncheckedBlock",
															"src": "9301:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 557,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "9446:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 559,
																			"indexExpression": {
																				"id": 558,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "9456:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9446:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "9463:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9446:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 562,
																	"nodeType": "ExpressionStatement",
																	"src": "9446:22:2"
																}
															]
														}
													]
												},
												"id": 565,
												"nodeType": "IfStatement",
												"src": "9068:425:2",
												"trueBody": {
													"id": 556,
													"nodeType": "Block",
													"src": "9090:191:2",
													"statements": [
														{
															"id": 555,
															"nodeType": "UncheckedBlock",
															"src": "9104:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 551,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "9235:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 552,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "9251:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9235:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 554,
																	"nodeType": "ExpressionStatement",
																	"src": "9235:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 567,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "9517:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "9523:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "9527:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 566,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "9508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9508:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "EmitStatement",
												"src": "9503:30:2"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "8131:297:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n Emits a {Transfer} event."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8442:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8458:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "8450:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8472:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "8464:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8484:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "8476:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8476:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8449:41:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8508:0:2"
									},
									"scope": 766,
									"src": "8433:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "9939:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 581,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "9953:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9972:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9964:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 582,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9964:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9964:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9953:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "9949:91:2",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "9976:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10026:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10018:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 588,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10018:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10018:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "9997:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9997:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "RevertStatement",
															"src": "9990:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10065:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10057:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 597,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10057:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10057:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "10069:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "10078:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "10049:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10049:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "10049:35:2"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "9546:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9892:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9906:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9898:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9923:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9915:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9897:32:2"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9939:0:2"
									},
									"scope": 766,
									"src": "9883:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "10472:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "10486:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10505:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10497:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10497:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10497:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10486:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "10482:89:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "10509:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10557:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10549:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10549:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10549:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "10530:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10530:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "10523:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 630,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "10588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10605:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10597:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 631,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10597:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10597:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "10609:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "10580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10580:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "10580:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "10097:314:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, by transferring it to address(0).\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10425:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "10431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "10448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10430:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10472:0:2"
									},
									"scope": 766,
									"src": "10416:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "11126:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "11145:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "11152:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "11161:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11168:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 649,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															657,
															717
														],
														"referencedDeclaration": 717,
														"src": "11136:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11136:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "11136:37:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "10628:411:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11053:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11070:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "11062:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11062:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11085:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "11077:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11077:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11102:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "11094:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11061:47:2"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11126:0:2"
									},
									"scope": 766,
									"src": "11044:136:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "12126:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "12140:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12157:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12149:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 670,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12149:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12149:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12140:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "12136:89:2",
												"trueBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "12161:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12211:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12203:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 676,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12203:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12203:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 675,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "12182:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12182:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 681,
															"nodeType": "RevertStatement",
															"src": "12175:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12238:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12257:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12249:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12249:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12238:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "12234:90:2",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "12261:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12310:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12302:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 691,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12302:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12302:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 690,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "12282:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12282:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 696,
															"nodeType": "RevertStatement",
															"src": "12275:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 699,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "12333:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 702,
															"indexExpression": {
																"id": 700,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "12345:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12333:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 703,
														"indexExpression": {
															"id": 701,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "12352:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12333:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 704,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "12363:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12333:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "12333:35:2"
											},
											{
												"condition": {
													"id": 707,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "12382:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 715,
												"nodeType": "IfStatement",
												"src": "12378:76:2",
												"trueBody": {
													"id": 714,
													"nodeType": "Block",
													"src": "12393:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 709,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "12421:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 710,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "12428:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 711,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "12437:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 708,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "12412:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12412:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 713,
															"nodeType": "EmitStatement",
															"src": "12407:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "11186:837:2",
										"text": " @dev Alternative version of {_approve} with an optional flag that can enable or disable the Approval event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to true\n using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12037:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12054:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "12046:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12069:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "12061:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "12078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12078:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "12098:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "12093:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12093:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12045:63:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12126:0:2"
									},
									"scope": 766,
									"src": "12028:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "12828:388:2",
										"statements": [
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12846:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "12838:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12838:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"arguments": [
														{
															"id": 730,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "12875:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "12882:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 729,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "12865:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12865:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12838:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 734,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "12904:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12929:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 736,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12929:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 735,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12924:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12924:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12938:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12924:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12904:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "12900:310:2",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "12943:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 741,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "12961:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 742,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "12980:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12961:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 751,
															"nodeType": "IfStatement",
															"src": "12957:130:2",
															"trueBody": {
																"id": 750,
																"nodeType": "Block",
																"src": "12987:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 745,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "13039:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 746,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 728,
																					"src": "13048:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 747,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "13066:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 744,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "13012:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13012:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 749,
																		"nodeType": "RevertStatement",
																		"src": "13005:67:2"
																	}
																]
															}
														},
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "13100:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 753,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "13137:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 754,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 722,
																				"src": "13144:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 755,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 728,
																					"src": "13153:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 756,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "13172:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13153:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13179:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 752,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				657,
																				717
																			],
																			"referencedDeclaration": 717,
																			"src": "13128:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13128:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "13128:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "12466:268:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12748:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12772:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "12764:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12764:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12787:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "12779:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12804:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "12796:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12763:47:2"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12828:0:2"
									},
									"scope": 766,
									"src": "12739:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 767,
							"src": "1592:11626:2",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72,
								212
							],
							"usedEvents": [
								778,
								787
							]
						}
					],
					"src": "105:13114:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 768,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 769,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 778,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 787,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 844,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 844,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 844,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 844,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 844,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 844,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 845,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								778,
								787
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							844
						],
						"IERC20Metadata": [
							870
						]
					},
					"id": 871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 845,
							"src": "136:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 847,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "144:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 850,
										"name": "IERC20",
										"nameLocations": [
											"290:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "290:6:4"
									},
									"id": 851,
									"nodeType": "InheritanceSpecifier",
									"src": "290:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 849,
								"nodeType": "StructuredDocumentation",
								"src": "175:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 870,
							"linearizedBaseContracts": [
								870,
								844
							],
							"name": "IERC20Metadata",
							"nameLocation": "272:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "303:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "371:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:2:4"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "401:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "401:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:15:4"
									},
									"scope": 870,
									"src": "362:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "422:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "492:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:4"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "524:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:15:4"
									},
									"scope": 870,
									"src": "483:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "545:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "624:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:2:4"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "658:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 866,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:7:4"
									},
									"scope": 870,
									"src": "615:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 871,
							"src": "262:405:4",
							"usedErrors": [],
							"usedEvents": [
								778,
								787
							]
						}
					],
					"src": "110:558:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							892
						]
					},
					"id": 893,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 873,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 892,
							"linearizedBaseContracts": [
								892
							],
							"name": "Context",
							"nameLocation": "627:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "703:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 878,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 877,
												"id": 880,
												"nodeType": "Return",
												"src": "713:17:5"
											}
										]
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:5"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "694:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:5"
									},
									"scope": 892,
									"src": "641:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "810:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 887,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 886,
												"id": 889,
												"nodeType": "Return",
												"src": "820:15:5"
											}
										]
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "794:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:5"
									},
									"scope": 892,
									"src": "743:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 893,
							"src": "609:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:759:5"
				},
				"id": 5
			}
		}
	}
}